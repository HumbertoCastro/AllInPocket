[{"/home/humberto/all-in-pocket/src/index.js":"1","/home/humberto/all-in-pocket/src/reportWebVitals.js":"2","/home/humberto/all-in-pocket/src/App.js":"3","/home/humberto/all-in-pocket/src/helpers/ClockFunction.js":"4","/home/humberto/all-in-pocket/src/helpers/svg.js":"5","/home/humberto/all-in-pocket/src/context/Provider.js":"6","/home/humberto/all-in-pocket/src/components/Email/Email.js":"7","/home/humberto/all-in-pocket/src/helpers/Minutes.js":"8","/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/Daily/Daily.js":"9","/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/HourlyCard/HourlyCard.js":"10","/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/SetNewTask/SetNewTask.js":"11","/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/TaskInformation/TaskInformation.js":"12","/home/humberto/all-in-pocket/src/components/TaskListComponents/TaskList/TaskList.js":"13","/home/humberto/all-in-pocket/src/components/HeaderComponents/Header/Header.js":"14","/home/humberto/all-in-pocket/src/components/HeaderComponents/Nav/Nav.js":"15","/home/humberto/all-in-pocket/src/components/HeaderComponents/Clock/Clock.js":"16","/home/humberto/all-in-pocket/src/components/Inputs/InputText/InputText.js":"17","/home/humberto/all-in-pocket/src/components/Inputs/Button-icon/Button-icon.js":"18","/home/humberto/all-in-pocket/src/components/Inputs/checkbox/Checkbox.js":"19","/home/humberto/all-in-pocket/src/components/Inputs/ColorsSelect/ColorsSelect.js":"20","/home/humberto/all-in-pocket/src/components/TaskListComponents/NewNote/NewNote.js":"21","/home/humberto/all-in-pocket/src/components/TaskListComponents/BlockOfNotes/BlockOfNotes.js":"22","/home/humberto/all-in-pocket/src/components/FinanceComponents/Finance/Finance.js":"23","/home/humberto/all-in-pocket/src/components/FinanceComponents/OverViewFinance/OverViewFinance.js":"24","/home/humberto/all-in-pocket/src/helpers/mockFinance.js":"25","/home/humberto/all-in-pocket/src/components/FinanceComponents/MonthExpenses/MonthExpenses.js":"26","/home/humberto/all-in-pocket/src/components/FinanceComponents/MonthProfit/MonthProfit.js":"27","/home/humberto/all-in-pocket/src/components/FinanceComponents/TransactionCard/TransactionCard.js":"28","/home/humberto/all-in-pocket/src/components/FinanceComponents/AddTransaction/AddTransaction.js":"29","/home/humberto/all-in-pocket/src/components/LoginComponents/Login/Login.js":"30","/home/humberto/all-in-pocket/src/components/Inputs/DarkLightModeSelector/DarkLightModeSelector.js":"31","/home/humberto/all-in-pocket/src/components/WeatherComponents/Weather/Weather.js":"32","/home/humberto/all-in-pocket/src/context/pocketContext.js":"33","/home/humberto/all-in-pocket/src/components/WeatherComponents/WeatherForm/WeatherForm.js":"34","/home/humberto/all-in-pocket/src/helpers/GeonamesReq.jsx":"35","/home/humberto/all-in-pocket/src/helpers/geonamesReqWithCounty.jsx":"36","/home/humberto/all-in-pocket/src/helpers/GeonamesReqWIthStates.jsx":"37","/home/humberto/all-in-pocket/src/components/WeatherComponents/WeatherCard/WeatherCard.js":"38","/home/humberto/all-in-pocket/src/helpers/mockWeather.js":"39","/home/humberto/all-in-pocket/src/components/Inputs/Loading/Loading.js":"40","/home/humberto/all-in-pocket/src/helpers/MinutesWithIncrements.js":"41","/home/humberto/all-in-pocket/src/helpers/ReturnMinutesFromZero.js":"42","/home/humberto/all-in-pocket/src/helpers/GetAllDays.js":"43","/home/humberto/all-in-pocket/src/helpers/GetDayOfYear.js":"44","/home/humberto/all-in-pocket/src/helpers/getDayArrayFromDate.js":"45","/home/humberto/all-in-pocket/src/components/TaskListComponents/TaskCard/TaskCard.js":"46"},{"size":611,"mtime":1684976586043,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1684970255054,"results":"49","hashOfConfig":"48"},{"size":1102,"mtime":1690323034252,"results":"50","hashOfConfig":"48"},{"size":571,"mtime":1685414992994,"results":"51","hashOfConfig":"48"},{"size":9791,"mtime":1690408250307,"results":"52","hashOfConfig":"48"},{"size":3054,"mtime":1690319675285,"results":"53","hashOfConfig":"48"},{"size":199,"mtime":1684976906648,"results":"54","hashOfConfig":"48"},{"size":296,"mtime":1685049543414,"results":"55","hashOfConfig":"48"},{"size":4304,"mtime":1690408091683,"results":"56","hashOfConfig":"48"},{"size":1302,"mtime":1690236053321,"results":"57","hashOfConfig":"48"},{"size":5739,"mtime":1690322055455,"results":"58","hashOfConfig":"48"},{"size":409,"mtime":1690142037026,"results":"59","hashOfConfig":"48"},{"size":1681,"mtime":1690411228115,"results":"60","hashOfConfig":"48"},{"size":451,"mtime":1688501015186,"results":"61","hashOfConfig":"48"},{"size":1394,"mtime":1690301302006,"results":"62","hashOfConfig":"48"},{"size":497,"mtime":1685377322389,"results":"63","hashOfConfig":"48"},{"size":670,"mtime":1688501015190,"results":"64","hashOfConfig":"48"},{"size":740,"mtime":1690305097894,"results":"65","hashOfConfig":"48"},{"size":721,"mtime":1688501015190,"results":"66","hashOfConfig":"48"},{"size":656,"mtime":1685320013637,"results":"67","hashOfConfig":"48"},{"size":2769,"mtime":1690411374815,"results":"68","hashOfConfig":"48"},{"size":1152,"mtime":1690407864398,"results":"69","hashOfConfig":"48"},{"size":3643,"mtime":1688501015186,"results":"70","hashOfConfig":"48"},{"size":1348,"mtime":1688501015186,"results":"71","hashOfConfig":"48"},{"size":305,"mtime":1686007974680,"results":"72","hashOfConfig":"48"},{"size":2677,"mtime":1688501015186,"results":"73","hashOfConfig":"48"},{"size":1983,"mtime":1688501015186,"results":"74","hashOfConfig":"48"},{"size":5151,"mtime":1688501015186,"results":"75","hashOfConfig":"48"},{"size":5150,"mtime":1690407475403,"results":"76","hashOfConfig":"48"},{"size":726,"mtime":1686507650295,"results":"77","hashOfConfig":"48"},{"size":1977,"mtime":1688501015190,"results":"78","hashOfConfig":"48"},{"size":1588,"mtime":1690404408352,"results":"79","hashOfConfig":"48"},{"size":110,"mtime":1684975765051,"results":"80","hashOfConfig":"48"},{"size":4089,"mtime":1689334409977,"results":"81","hashOfConfig":"48"},{"size":784,"mtime":1690320378777,"results":"82","hashOfConfig":"48"},{"size":735,"mtime":1690402907258,"results":"83","hashOfConfig":"48"},{"size":759,"mtime":1690404011917,"results":"84","hashOfConfig":"48"},{"size":2698,"mtime":1689008923523,"results":"85","hashOfConfig":"48"},{"size":55672,"mtime":1688663101247,"results":"86","hashOfConfig":"48"},{"size":388,"mtime":1688667121140,"results":"87","hashOfConfig":"48"},{"size":616,"mtime":1689634138645,"results":"88","hashOfConfig":"48"},{"size":579,"mtime":1689706647759,"results":"89","hashOfConfig":"48"},{"size":1131,"mtime":1689782009162,"results":"90","hashOfConfig":"48"},{"size":988,"mtime":1690143029135,"results":"91","hashOfConfig":"48"},{"size":350,"mtime":1690143188735,"results":"92","hashOfConfig":"48"},{"size":1271,"mtime":1690409392100,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"1jv46cs",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"97"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"97"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"97"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"97"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"97"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/humberto/all-in-pocket/src/index.js",[],[],[],"/home/humberto/all-in-pocket/src/reportWebVitals.js",[],[],"/home/humberto/all-in-pocket/src/App.js",["248"],[],"import './App.css';\nimport './Animations.css'\nimport { useContext, useEffect } from 'react';\nimport Header from './components/HeaderComponents/Header/Header'\nimport pocketContext from './context/pocketContext';\nimport Nav from './components/HeaderComponents/Nav/Nav'\nimport Login from './components/LoginComponents/Login/Login';\n\nfunction App() {\n  const {\n    page,\n    theme,\n  } = useContext(pocketContext);\n\n  useEffect(() => {\n    document.querySelector('body').style.backgroundColor = theme.backgroundColor;\n    const w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    const h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    document.querySelector('body').style.width = w;\n    document.querySelector('body').style.height = h;\n  }, [])\n\n  const MainContent = () => (\n    <>\n      <Header />\n      {\n        page\n      }\n      <Nav />\n    </>\n  )\n\n  return (\n    <div className=\"App\" style={ { backgroundColor: theme.backgroundColor } }>\n      {\n        !true ? <Login /> : (MainContent())\n      }\n    </div>\n  );\n}\n\nexport default App;\n","/home/humberto/all-in-pocket/src/helpers/ClockFunction.js",[],[],[],"/home/humberto/all-in-pocket/src/helpers/svg.js",[],[],"/home/humberto/all-in-pocket/src/context/Provider.js",["249","250"],[],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport pocketContext from './pocketContext';\nimport ReturnMinutes from '../helpers/Minutes';\nimport yearFinance from '../helpers/mockFinance';\nimport Daily from '../components/WeeklyPlanerComponents/Daily/Daily';\n\nconst weekday = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thur\",\"Fri\",\"Sat\"];\nconst types = ['Food', 'Delivery', 'Rent', 'Gym', 'Car insurence', 'Life insurence', 'Cleaning', 'Education', \n'Light', 'Water', 'Gas', 'Internet', 'Restaurants', 'Drug store', 'Self care', 'Medic', 'Dentist', 'Car', 'Travel', 'Present', 'Cloats'];\nconst ptypes = ['Salary' , 'Investiments', 'Sales', 'Others'];\n\nconst themes = {\n  light: {\n    backgroundColor: '#fff',\n    textColor: '#000',\n    primaryColor: '#fff',\n    boxShadow: '0px 2px 2px 0px hsla(0,0%,0%,0.14), 0px 3px 1px -2px hsla(0,0%,0%,0.12), 0px 1px 5px 0px hsla(0,0%,0%,0.2);'\n  },\n  dark: {\n    backgroundColor: '#121212',\n    textColor: '#fff',\n    primaryColor: '#1F1B24',\n    boxShadow: '0px 2px 2px 0px white, 0px 3px 1px -2px hsla(0,0%,0%,0.12), 0px 1px 5px 0px hsla(0,0%,0%,0.2);'\n  },\n};\n\nfunction Provider({ children }) {\n  const taskArray = JSON.parse(localStorage.getItem('tasklist')) ? JSON.parse(localStorage.getItem('tasklist')) : null;\n  const notesList = localStorage.getItem('notes') ?  JSON.parse(localStorage.getItem('notes')) : []\n  const [page, setPage] = useState(<Daily />);\n  const [exTypes, setExtypes] = useState(localStorage.getItem('exTypes') ? JSON.parse(localStorage.getItem('exTypes')) : types);\n  const [prTypes, setPrtypes] = useState(localStorage.getItem('prTypes') ? JSON.parse(localStorage.getItem('prTypes')) : ptypes);\n  const [tasks, setTasks] = useState(taskArray);\n  const [interfaceNewTask, openInterface] = useState(false);\n  const [notes, setNotes] = useState(notesList);\n  const [finances, setFinances] = useState(localStorage.getItem('finances') ? JSON.parse(localStorage.getItem('finances')) : yearFinance);\n  const [theme, setTheme] = useState(localStorage.getItem('theme') ? JSON.parse(localStorage.getItem('theme')) : themes.light);\n  const [fetchDataWeather, setFetchData] = useState();\n\n  const toggleTheme = () => {\n    document.querySelector('body').style.backgroundColor = theme === themes.light ? themes.dark.backgroundColor : themes.light.backgroundColor;\n    setTheme(theme === themes.light ? themes.dark : themes.light);\n    localStorage.setItem('theme', theme === themes.light ? JSON.stringify(themes.dark) : JSON.stringify(themes.light));\n  };\n\n\n  const contextValue = {\n    fetchDataWeather, \n    setFetchData,\n    prTypes,\n    setPrtypes,\n    exTypes,\n    setExtypes,\n    finances, \n    setFinances,\n    notes,\n    setNotes,\n    page,\n    setPage,\n    tasks,\n    setTasks,\n    interfaceNewTask,\n    openInterface,\n    theme,\n    setTheme,\n    toggleTheme,\n  };\n\n  return (\n    <pocketContext.Provider value={ contextValue }>\n      {children}\n    </pocketContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n","/home/humberto/all-in-pocket/src/components/Email/Email.js",["251"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst Email = () => (\n  <div>\n    Email Component\n  </div>\n);\n\nEmail.propTypes = {};\n\nEmail.defaultProps = {};\n\nexport default Email;\n","/home/humberto/all-in-pocket/src/helpers/Minutes.js",[],[],"/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/Daily/Daily.js",["252"],[],"/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/HourlyCard/HourlyCard.js",[],[],"/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/SetNewTask/SetNewTask.js",["253"],[],"import React, { useContext, useEffect, useState } from 'react';\nimport pocketContext from '../../../context/pocketContext';\nimport svgs from '../../../helpers/svg';\nimport ColorsSelect from '../../Inputs/ColorsSelect/ColorsSelect';\nimport InputText from '../../Inputs/InputText/InputText';\nimport ReturnMinutesFromZero from '../../../helpers/ReturnMinutesFromZero';\nimport { dates } from '../../../helpers/GetAllDays';\nimport ReturnMinutesWithIncrements from '../../../helpers/MinutesWithIncrements';\nconst Tempos = ReturnMinutesFromZero;\n\n  const SetNewTask = ({ id, openInterface, altura }) => {\n  const hj = new Date();\n\n  const [title, setTitle] = useState('Task title');\n  const [description, setDescription] = useState('Task description');\n  const [duration, setDuration] = useState(1);\n  const [color, setColor] = useState('#73C0FC');\n  const [rmBtn, setRmBtn] = useState(false);\n  const [date, setDate] = useState(`2023-${hj.getMonth() < 10 ? `0${hj.getMonth() + 1}` : hj.getMonth() + 1}-${hj.getDate() < 10 ? `0${hj.getDate()}` : hj.getDate()}`);\n  const [time, setTime] = useState('06:00');\n\n  const {\n    tasks,\n    setTasks,\n    theme,\n  } = useContext(pocketContext);\n\n  useEffect(() => {\n    console.log(date)\n    if (id) {\n    const currentTask = tasks.filter((x) => x.id === id)[0];\n    console.log(currentTask, Object.values(currentTask)[2]);\n    setTitle(currentTask.title);\n    setDescription(currentTask.description);\n    setDuration(currentTask.duration);\n    setTime(currentTask.time);\n    setColor(currentTask.color);\n    setDate(returnDateFormat(currentTask.date));\n    setRmBtn(true)\n    } else {\n      setDate(`2023-${hj.getMonth() < 10 ? `0${hj.getMonth() + 1}` : hj.getMonth() + 1}-${hj.getDate() < 10 ? `0${hj.getDate()}` : hj.getDate()}`)\n    }\n  }, [])\n\n  const returnDateFormat = (taskDate) => {\n    const mes = dates.indexOf(dates.find((x) => x.month === taskDate[0]));\n    console.log(mes)\n    return `2023-${mes < 10 ? `0${mes + 1}` : mes + 1}-${taskDate[1]}`\n  }\n\n  const handleChange = ({ target: { value, name } }) => {\n    name === \"title\" ? setTitle(value) : setDescription(value);\n  }\n\n  const handleDelete = () => {\n    console.log(id);\n    setTasks(tasks.filter((x) => x.id !== id));\n    openInterface(false)\n    localStorage.setItem('tasklist', JSON.stringify(tasks.filter((x) => x.id !== id)));\n  }\n\n  const handleClick = () => {\n    const mes = dates[parseInt(date.substring(5,7)) - 1].month;\n    const dia = parseInt(date.substring(8,10))\n    console.log([mes, dia])\n    const newTasksArray = tasks ? tasks : [];\n    const newTaskObject = {\n      title,\n      description,\n      date: [mes, dia],\n      color,\n      duration,\n      time,\n      id: localStorage.getItem('alltimetasks') ? parseInt(localStorage.getItem('alltimetasks')) + 1 : 1,\n    }\n    if (id) {\n      newTaskObject.id = id;\n      setTasks(tasks.map((x) => x.id === id ? newTaskObject : x));\n      localStorage.setItem('tasklist', JSON.stringify(newTasksArray));\n    } else {\n      setTasks([...newTasksArray, newTaskObject]);\n      localStorage.setItem('tasklist', JSON.stringify([...newTasksArray, newTaskObject]));\n      localStorage.setItem('alltimetasks', localStorage.getItem('alltimetasks') ? parseInt(localStorage.getItem('alltimetasks')) + 1 : 1);\n    }\n    setDuration(0);\n    openInterface(false);\n  }\n\n  return(\n    <div className=\"new-task colunm s-evenly scale-in-ver-top \" style={ {\n      backgroundColor: theme.primaryColor, color: theme.textColor, boxShadow: theme.boxShadow, top: altura }}>\n      <button className='x-btn' onClick={() => {\n        openInterface(false);\n      }} style={ { backgroundColor: theme.primaryColor, color: theme.textColor }}>\n        {\n          svgs.exit()\n        }\n      </button>\n      <InputText name=\"title\" callback={ handleChange } placename={ title } />\n      <InputText name=\"description\" callback={ handleChange } placename={ description } />\n      <label>\n        When:\n        <input type='date' value={ date } className='date-input' onChange={({target: { value }}) => {\n          setDate(value);\n        }}/>\n      </label>\n      <select onChange={({ target: { value } }) => {\n        console.log(value);\n        setTime(value);\n        }} style={ { backgroundColor: theme.primaryColor, color: theme.textColor }} value={time}>\n        <option value=\"1\">Set the time</option>\n            {\n              ReturnMinutesWithIncrements.map((x, index) => (\n                <option value={ x } key={ `${index}-${x}` }>{ x }</option>\n              ))\n            }\n      </select>\n      <select onChange={({ target: { value } }) => {\n        console.log(value)\n        setDuration(value);\n        }} style={ { backgroundColor: theme.primaryColor, color: theme.textColor }} value={duration}>\n        <option value=\"1\">How long will it last</option>\n            {\n              Tempos.slice(1).map((x, index) => (\n                <option value={ index + 1 } key={ `${index}-${x}` }>{ x }</option>\n              ))\n            }\n      </select>\n      <label className='colunm s-evenly'>Choose the color for the task\n       <ColorsSelect selectedColor={ color } callback={ setColor }/>\n      </label>\n      <div className='row s-evenly'>\n        <button onClick={ handleClick } style={ { backgroundColor: theme.primaryColor, color: theme.textColor }}>\n          <p>\n            {\n              rmBtn ? 'Update existing task' : 'Create new Task'\n            }\n          </p>\n        </button>\n        {\n          rmBtn ? <button onClick={handleDelete} style={ {color: 'red', backgroundColor: theme.primaryColor} }>Remove Existing task</button> : null\n        }\n      </div>\n    </div>\n  )\n};\n\nSetNewTask.propTypes = {};\n\nSetNewTask.defaultProps = {};\n\nexport default SetNewTask;\n","/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/TaskInformation/TaskInformation.js",[],[],"/home/humberto/all-in-pocket/src/components/TaskListComponents/TaskList/TaskList.js",["254"],[],"/home/humberto/all-in-pocket/src/components/HeaderComponents/Header/Header.js",[],[],"/home/humberto/all-in-pocket/src/components/HeaderComponents/Nav/Nav.js",[],[],"/home/humberto/all-in-pocket/src/components/HeaderComponents/Clock/Clock.js",[],[],"/home/humberto/all-in-pocket/src/components/Inputs/InputText/InputText.js",[],[],"/home/humberto/all-in-pocket/src/components/Inputs/Button-icon/Button-icon.js",["255"],[],"import React, { useContext, useState } from 'react';\nimport pocketContext from '../../../context/pocketContext';\n\n\nconst ButtonIcon = ({ iconSvg, callback, id}) => {\n  const btn = document.querySelector(`#button-${id}`);\n  const {\n    theme,\n  } = useContext(pocketContext);\n  return (\n  <button className=\"b-icon\" id={ `button-${id}` } onClick={ () => {\n    callback();\n    document.querySelector(`#button-${id}`).className = 'selected b-icon'\n  } } style={ { color: btn ? btn.className === 'selected b-icon' ? '#73C0FC' : theme.textColor : theme.textColor,\n  backgroundColor: theme.backgroundColor  } }>\n    {\n      iconSvg()\n    }\n  </button>\n  )\n};\n\nButtonIcon.propTypes = {};\n\nButtonIcon.defaultProps = {};\n\nexport default ButtonIcon;\n","/home/humberto/all-in-pocket/src/components/Inputs/checkbox/Checkbox.js",[],[],"/home/humberto/all-in-pocket/src/components/Inputs/ColorsSelect/ColorsSelect.js",["256"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst colors = [\"#F2B21F\", \"#6AF676\", \"#6ADAF6\", \"#5B6AD4\", \"#F76AD9\", \"#BAD45B\", \"#C069F5\", \"#C212D6\", \"#D44539\", \"#C2EB4C\", \"#B9EBC5\", \"#B5D5F5\"];\n\nconst ColorsSelect = ({ callback, selectedColor }) => (\n  <div className='colors-div'>\n    {\n    colors.map((cor) => (\n      <button\n        className={ selectedColor === cor ? \"s-scale color-button\" : \"color-button\" }\n        style={ {\n          backgroundColor: cor,\n        } }\n        onClick={() => callback(cor)}\n      />))\n    }\n  </div >\n);\n\nColorsSelect.propTypes = {};\n\nColorsSelect.defaultProps = {};\n\nexport default ColorsSelect;\n","/home/humberto/all-in-pocket/src/components/TaskListComponents/NewNote/NewNote.js",["257","258","259"],[],"/home/humberto/all-in-pocket/src/components/TaskListComponents/BlockOfNotes/BlockOfNotes.js",[],[],"/home/humberto/all-in-pocket/src/components/FinanceComponents/Finance/Finance.js",["260"],[],"import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../finance.css'\nimport OverViewFinance from '../OverViewFinance/OverViewFinance';\nimport MonthExpenses from '../MonthExpenses/MonthExpenses';\nimport pocketContext from '../../../context/pocketContext';\nimport MonthProfit from '../MonthProfit/MonthProfit';\nimport AddTransaction from '../AddTransaction/AddTransaction';\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n\nconst Finance = () => {\n  const date = new Date();\n  let month = monthNames[date.getMonth()];\n\n  const {\n    finances,\n    theme,\n  } = useContext(pocketContext);\n\n  const [atualDisplay, setActualDisplay] = useState('expenses')\n  const [useMonth, setUseMonth] = useState(month);\n\n  const callbackChangeFinances = (newFinances, display) => {\n    setUseFinances(newFinances);\n    if (!display) {\n      if (atualDisplay === 'expenses') {\n        setDisplay(<MonthExpenses finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      } else if (atualDisplay === 'profit') {\n        setDisplay(<MonthProfit finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      }\n    } else {\n      if (display === 'expenses') {\n        setDisplay(<MonthExpenses finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      } else if (display === 'profit') {\n        setDisplay(<MonthProfit finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      }\n    }\n  }\n\n  const [display, setDisplay] = useState(<MonthExpenses finances={ finances } month={ useMonth } callback={ callbackChangeFinances } />);\n  const [useFinances, setUseFinances] = useState(finances);\n\n  const handleSelect = ({ target: { value } }) => {\n    setUseMonth(value)\n    if (atualDisplay === 'expenses') {\n      setDisplay(<MonthExpenses finances={ useFinances } month={ value } callback={ callbackChangeFinances } />)\n    } else if (atualDisplay === 'profit') {\n      setDisplay(<MonthProfit finances={ useFinances } month={ value } callback={ callbackChangeFinances } />)\n    }\n  }\n\n  const handleSelectTransactions = ({ target: { value }}) => {\n    setActualDisplay(value);\n    if (value === 'expenses') {\n      setDisplay(<MonthExpenses finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n    } else if (value === 'profit') {\n      setDisplay(<MonthProfit finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n    } \n  }\n\n  return (\n    <div className='finance-div'>\n      <select className='finance-select-plus colunm' onChange={ handleSelect } value={ useMonth }\n      style={ { backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n        {\n          monthNames.map((x) => (\n            <option value={x}>{ x }</option>\n          ))\n        }\n      </select>\n      <OverViewFinance finances={ useFinances } month={ useMonth }/>\n      <AddTransaction callback={ callbackChangeFinances } useMonth={ useMonth } />\n      <p className='select-p row' style={ { backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n        This month\n        <select className='colunm' onChange={ handleSelectTransactions } style={ { backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n          <option> expenses </option>\n          <option> profit </option>\n        </select>\n      </p>\n      {\n        display\n      }\n    </div>\n  )\n};\n\nFinance.propTypes = {};\n\nFinance.defaultProps = {};\n\nexport default Finance;\n","/home/humberto/all-in-pocket/src/components/FinanceComponents/OverViewFinance/OverViewFinance.js",["261","262"],[],"import React, { useContext, useEffect, useState } from 'react';\nimport pocketContext from '../../../context/pocketContext';\n\nconst OverViewFinance = ({ month }) => {\n  const {\n    finances,\n    theme,\n  } = useContext(pocketContext);\n  const totalExpenses = finances.filter((x) => x.month === month)[0].expenses.map((x) => x.value).reduce((x, sum) => x + sum, 0);\n  const totalProfit = finances.filter((x) => x.month === month)[0].profit.map((x) => x.value).reduce((x, sum) => x + sum, 0);\n  const total = totalProfit - totalExpenses;\n\n  return (\n    <div className='overview-finance colunm s-evenly scale-in-center' style={ { backgroundColor: theme.primaryColor, color: theme.textColor }}>\n      <div className='sub-finance colunm s-evenly'>\n        <div className='colunm s-evenly'>\n          <p>\n            Your balance\n          </p>\n          <h1 style={ total >= 0 ? { color: \"green\" } : { color: \"red\" } } className='overview-total'>\n            $ { total }\n          </h1>\n        </div>\n        <div className='row s-btw prof-expen'>\n          <p style={ { color: \"green\" } }>total income +${ totalProfit }</p>\n          <p style={ { color: \"red\" } }>total expenses -${ totalExpenses }</p>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nOverViewFinance.propTypes = {};\n\nOverViewFinance.defaultProps = {};\n\nexport default OverViewFinance;\n","/home/humberto/all-in-pocket/src/helpers/mockFinance.js",[],[],"/home/humberto/all-in-pocket/src/components/FinanceComponents/MonthExpenses/MonthExpenses.js",["263"],[],"import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionCard from '../TransactionCard/TransactionCard';\nimport pocketContext from '../../../context/pocketContext';\nimport InputText from '../../Inputs/InputText/InputText';\nimport svgs from '../../../helpers/svg';\n\nconst MonthExpenses = ({ month, finances, callback }) => {\n  const [name, setName] = useState('');\n\n  const {\n    exTypes,\n    setExtypes,\n    theme,\n  } = useContext(pocketContext);\n\n  const newTypes = exTypes.map((tipo) => {\n    return {\n      [tipo]: [...finances.filter((x) => x.month === month)[0].expenses.filter((x) => x.type === tipo)].sort((a, b) => {\n        return b.date - a.date\n      }),\n    }\n  })\n\n  const handleChange = ({ target: { value } }) => {\n    if (value.length > 0 ) {\n      setName(value);\n    }\n  }\n\n  const handleClick = () => {\n    if (name.length) {\n      setExtypes([...exTypes, name]);\n      setName('');\n      localStorage.setItem('exTypes', JSON.stringify([...exTypes, name]));\n    }\n  }\n\n  const deleteCategory = (category) => {\n    setExtypes(exTypes.filter((x) => x !== category));\n    localStorage.setItem('exTypes', JSON.stringify(exTypes.filter((x) => x !== category)));\n  }\n\n  return (\n    <div className='month-expenses' >\n      <div className='row'>\n        <InputText placename=\"set new category\" callback={ handleChange }/>\n        <button className='add-finance-btn' onClick={ handleClick } style={ { backgroundColor: theme.backgroundColor, color: theme.textColor }}>{ svgs.plus() }</button>\n      </div>\n      {\n        newTypes.sort((a,b) => {\n          const varA = [...Object.values(a)[0]];\n          const varB = [...Object.values(b)[0]];\n          if (varA.length > 0 && varB.length === 0 ) {\n            return -1;\n          } else if (varA.length === 0 && varB.length > 0) {\n            return 1;\n          } else if (varA.length === 0 && varB.length === 0) {\n            return 0;\n          } else {\n            if (varA.reduce((total, x) => x.value + total, 0) > varB.reduce((total, x) => x.value + total, 0)) {\n              return -1;\n            } else if (varA.reduce((total, x) => x.value + total, 0) < varB.reduce((total, x) => x.value + total, 0)) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }\n        }).map((x) => {\n          return (\n            <TransactionCard  array={ x } color=\"red\" callback={ callback } finances={ finances } month={ month } isProfit={false} deleteCategory={deleteCategory} />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nMonthExpenses.propTypes = {};\n\nMonthExpenses.defaultProps = {};\n\nexport default MonthExpenses;\n","/home/humberto/all-in-pocket/src/components/FinanceComponents/MonthProfit/MonthProfit.js",["264"],[],"import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionCard from '../TransactionCard/TransactionCard';\nimport pocketContext from '../../../context/pocketContext';\nimport InputText from '../../Inputs/InputText/InputText';\nimport svgs from '../../../helpers/svg';\n\nconst MonthProfit = ({ month, finances, callback }) => {\n  const [name, setName] = useState('');\n  console.log(month);\n\n  const {\n    prTypes,\n    setPrtypes,\n    theme,\n  } = useContext(pocketContext);\n\n  const newTypes = prTypes.map((tipo) => {\n    return {\n      [tipo]: [...finances.filter((x) => x.month === month)[0].profit.filter((x) => x.type === tipo)].sort((a, b) => {\n        return b.date - a.date\n      }),\n    }\n  })\n\n  const handleChange = ({ target: { value } }) => {\n    if (value.length > 0 ) {\n      setName(value);\n    }\n  }\n\n  const handleClick = () => {\n    if (name.length) {\n      setPrtypes([...prTypes, name]);\n      setName('');\n      localStorage.setItem('prTypes', JSON.stringify([...prTypes, name]));\n    }\n  }\n\n  const deleteCategory = (category) => {\n    console.log(prTypes.filter((x) => x !== category), category)\n    setPrtypes(prTypes.filter((x) => x !== category));\n    localStorage.setItem('prTypes', JSON.stringify(prTypes.filter((x) => x !== category)));\n  }\n\n  return (\n    <div className='month-expenses'>\n      <div className='row'>\n        <InputText placename=\"set new category\" callback={ handleChange }/>\n        <button onClick={ handleClick } style={ { backgroundColor: theme.backgroundColor, color: theme.textColor }}>{ svgs.plus() }</button>\n      </div>\n      {\n        newTypes.map((x) => {\n          return (\n            <TransactionCard  array={ x } color=\"green\" callback={ callback } finances={ finances } month={ month } isProfit={true} deleteCategory={deleteCategory} />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nMonthProfit.propTypes = {};\n\nMonthProfit.defaultProps = {};\n\nexport default MonthProfit;\n","/home/humberto/all-in-pocket/src/components/FinanceComponents/TransactionCard/TransactionCard.js",[],[],"/home/humberto/all-in-pocket/src/components/FinanceComponents/AddTransaction/AddTransaction.js",["265","266"],[],"/home/humberto/all-in-pocket/src/components/LoginComponents/Login/Login.js",["267"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport \"./login.css\"\n\n\nconst Login = () => {\n  return (\n    <div className='login'>\n      <h1>\n        Welcome to All.io,\n      </h1>\n      <p>Please, tell us your name</p>\n      <div class=\"form\">\n        <input class=\"input\" placeholder=\"your name\" required=\"\" type=\"text\" onChange={ () => {} } />\n        <span class=\"input-border\"></span>\n      </div>\n      <p>And your password</p>\n      <div class=\"form\">\n        <input class=\"input\" placeholder=\"password\" required=\"\" type=\"password\" onChange={ () => {} } />\n        <span class=\"input-border\"></span>\n      </div>\n    </div>\n  )\n};\n\nLogin.propTypes = {};\n\nLogin.defaultProps = {};\n\nexport default Login;\n","/home/humberto/all-in-pocket/src/components/Inputs/DarkLightModeSelector/DarkLightModeSelector.js",[],[],"/home/humberto/all-in-pocket/src/components/WeatherComponents/Weather/Weather.js",["268","269"],[],"/home/humberto/all-in-pocket/src/context/pocketContext.js",[],[],"/home/humberto/all-in-pocket/src/components/WeatherComponents/WeatherForm/WeatherForm.js",["270"],[],"import React, { useContext, useEffect, useState } from 'react';\nimport fetchCountryNames from '../../../helpers/GeonamesReq';\nimport fetchStatesByCountry from '../../../helpers/geonamesReqWithCounty';\nimport fetchCitiesByState from '../../../helpers/GeonamesReqWIthStates';\nimport pocketContext from '../../../context/pocketContext';\nimport Loading from '../../Inputs/Loading/Loading';\n\nconst WeatherForm = ({callback, setLoad}) => {\n  const {\n    theme,\n  } = useContext(pocketContext);\n\n  const [country, setCountry] = useState(null);\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [countryOptions, setCountrys] = useState(null);\n  const [showStates, setShowStates] = useState(false);\n  const [stateOptions, setStateOptions] = useState(null);\n  const [showCities, setShowCities] = useState(false);\n  const [citiesOptions, setCitiesOptions] = useState(null);\n\n  async function handleCountryChange({ target: { value } }) {\n    setShowCities(false);\n    setShowStates(false);\n    setCountry(value);\n    setLoad(true);\n    console.log(value);\n    const res = await fetchStatesByCountry(value);\n    setLoad(false);\n    console.log(res)\n    setStateOptions(res);\n    setShowStates(true);\n  };\n\n  async function handleCityChange({ target: { value } }) {\n    setCity(value);\n    console.log(value);\n  }\n\n  async function handleStateChange({ target: { value } }) {\n    setShowCities(false);\n    setState(value);\n    setLoad(true);\n    const res = await fetchCitiesByState(country, value);\n    setLoad(false);\n    setCitiesOptions(res);\n    setShowCities(true);\n  };\n  async function fetchData() {\n    setLoad(true);\n    const res = await fetchCountryNames();\n    setLoad(false);\n    setCountrys(res);\n  }\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  return (\n    <form onSubmit={(event) => {\n      event.preventDefault();\n      callback(city);\n    }}>\n      {\n        countryOptions ? (\n          <>\n            <div className='scale-in-center select-div colunm s-btw'>\n              <label style={ { color: theme.textColor } }>Country:</label>\n              <select onChange={handleCountryChange} className='select-cep' style={{ backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n                <option value=''>Select Country</option>\n                {\n                  countryOptions.map(({ value, label }) => (<option value={ value }>{ label }</option>))\n                }\n              </select>\n            </div>\n            {\n              showStates ? \n              <div className='scale-in-center select-div colunm s-btw'>\n                <label style={ { color: theme.textColor } }>State:</label>\n                <select onChange={handleStateChange} className='select-cep' style={{ backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n                <option value=''>Select State</option>\n                  {\n                    stateOptions.map(({ value, label }) => (<option value={ value }>{ label }</option>))\n                  }\n                </select>\n              </div> : null\n            }\n            {\n              showCities ? \n              <div className='scale-in-center select-div colunm s-btw'>\n                <label style={ { color: theme.textColor } }>City:</label>\n                <select onChange={handleCityChange} className='select-cep' style={{ backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n                <option value=''>Select City</option>\n                  {\n                    citiesOptions.map(({ value, label }) => (<option value={ value }>{ label }</option>))\n                  }\n                </select>\n              </div> : null\n            }\n            {\n              city && country && state ? <button\n                type=\"submit\"\n                className='btn-search scale-in-center'\n                style={{ backgroundColor: theme.backgroundColor, color: theme.textColor }}\n              >Fetch Weather</button> : null\n            }\n          </>\n          ) : <Loading />\n      }\n    </form>\n  );\n};\n\nexport default WeatherForm;\n","/home/humberto/all-in-pocket/src/helpers/GeonamesReq.jsx",[],[],"/home/humberto/all-in-pocket/src/helpers/geonamesReqWithCounty.jsx",[],[],"/home/humberto/all-in-pocket/src/helpers/GeonamesReqWIthStates.jsx",[],[],"/home/humberto/all-in-pocket/src/components/WeatherComponents/WeatherCard/WeatherCard.js",["271","272"],[],"import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport svgs from '../../../helpers/svg';\nimport pocketContext from '../../../context/pocketContext';\n\n\nconst WeatherCard = ({ weatherData }) => {\n  const arrayHours = weatherData.forecast.forecastday[0].hour.map((x) => {\n    const { chance_of_rain, temp_c, time } = x;\n    return {\n      rain: chance_of_rain,\n      temp_c,\n      icon: x.condition.icon,\n      time: time.substr(time.length -5),\n    }\n  })\n\n  const {\n    theme,\n  } = useContext(pocketContext);\n\n  console.log(arrayHours);\n\n  return (\n    <div className='weather-card'>\n    <div className='subs row s-evenly' >\n      <div className='humidity scale-in-center' style={ { backgroundColor: theme.primaryColor, color: theme.textColor } }>\n        {\n          svgs.water()\n        }\n        <div>\n          <p>\n            {\n              weatherData.current.humidity + '%'\n            }\n          </p>\n          <p>humidity</p>\n        </div>\n      </div>\n      <div className='humidity scale-in-center' style={ { backgroundColor: theme.primaryColor, color: theme.textColor } }>\n        {\n          svgs.wind()\n        }\n        <div>\n          <p>\n            {\n              weatherData.current.wind_kph + 'km/h'\n            }\n          </p>\n          <p>wind</p>\n        </div>\n      </div>\n    </div>\n    <div className='weather-div column s-evenly scale-in-center' style={ { backgroundColor: theme.primaryColor, color: theme.textColor } }>\n      <h1>\n        {\n          weatherData.location.name\n        }\n      </h1>\n      <p className='gray'>\n        {\n          `${weatherData.location.region}, ${weatherData.location.country}`\n        }        \n      </p>\n      <h1>{ weatherData.current.condition.text }</h1>\n      <img src={ weatherData.current.condition.icon } alt='condition img' />\n      <div className='row temp-div'>\n        <h1 className='temp'>\n          {\n            weatherData.current.temp_c + '°C'\n          }\n        </h1>\n        <div className='line-v'></div>\n        <h1 className='temp'>\n          {\n            weatherData.current.temp_f + '°F'\n          }\n        </h1>\n      </div>\n      {\n        arrayHours.map((x) => {\n          const { rain, temp_c, icon, time } = x;\n          return (\n            <div className='row s-evenly hourly-card'>\n              <p>{ time }</p>\n              <div className='img-div'>\n                <img src={ icon } />\n              </div>\n              <h1>{ temp_c }°C</h1>\n              <p>{ svgs.water() }{ rain }%</p>\n            </div>\n          )\n        })\n      }\n    </div>\n    </div>\n)};\n\nWeatherCard.propTypes = {};\n\nWeatherCard.defaultProps = {};\n\nexport default WeatherCard;\n","/home/humberto/all-in-pocket/src/helpers/mockWeather.js",[],[],[],"/home/humberto/all-in-pocket/src/components/Inputs/Loading/Loading.js",[],[],"/home/humberto/all-in-pocket/src/helpers/MinutesWithIncrements.js",[],[],"/home/humberto/all-in-pocket/src/helpers/ReturnMinutesFromZero.js",[],[],"/home/humberto/all-in-pocket/src/helpers/GetAllDays.js",[],[],"/home/humberto/all-in-pocket/src/helpers/GetDayOfYear.js",[],[],"/home/humberto/all-in-pocket/src/helpers/getDayArrayFromDate.js",[],[],"/home/humberto/all-in-pocket/src/components/TaskListComponents/TaskCard/TaskCard.js",["273"],[],{"ruleId":"274","severity":1,"message":"275","line":21,"column":6,"nodeType":"276","endLine":21,"endColumn":8,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":4,"column":8,"nodeType":"280","messageId":"281","endLine":4,"endColumn":21},{"ruleId":"278","severity":1,"message":"282","line":8,"column":7,"nodeType":"280","messageId":"281","endLine":8,"endColumn":14},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"274","severity":1,"message":"284","line":39,"column":6,"nodeType":"280","endLine":39,"endColumn":11},{"ruleId":"274","severity":1,"message":"285","line":43,"column":6,"nodeType":"276","endLine":43,"endColumn":8,"suggestions":"286"},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"278","severity":1,"message":"287","line":1,"column":29,"nodeType":"280","messageId":"281","endLine":1,"endColumn":37},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"278","severity":1,"message":"288","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":28},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"289","severity":1,"message":"290","line":27,"column":23,"nodeType":"291","messageId":"292","endLine":27,"endColumn":41},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"278","severity":1,"message":"293","line":1,"column":29,"nodeType":"280","messageId":"281","endLine":1,"endColumn":38},{"ruleId":"278","severity":1,"message":"287","line":1,"column":40,"nodeType":"280","messageId":"281","endLine":1,"endColumn":48},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"278","severity":1,"message":"294","line":1,"column":50,"nodeType":"280","messageId":"281","endLine":1,"endColumn":70},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"278","severity":1,"message":"293","line":1,"column":29,"nodeType":"280","messageId":"281","endLine":1,"endColumn":38},{"ruleId":"278","severity":1,"message":"295","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":13},{"ruleId":"274","severity":1,"message":"296","line":57,"column":6,"nodeType":"276","endLine":57,"endColumn":8,"suggestions":"297"},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},{"ruleId":"298","severity":1,"message":"299","line":87,"column":17,"nodeType":"300","endLine":87,"endColumn":37},{"ruleId":"278","severity":1,"message":"283","line":2,"column":8,"nodeType":"280","messageId":"281","endLine":2,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'theme.backgroundColor'. Either include it or remove the dependency array.","ArrayExpression",["301"],"no-unused-vars","'ReturnMinutes' is defined but never used.","Identifier","unusedVar","'weekday' is assigned a value but never used.","'PropTypes' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'date', 'hj', 'id', and 'tasks'. Either include them or remove the dependency array.",["302"],"'useState' is defined but never used.","'useCallback' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'id'.","ArrowFunctionExpression","unsafeRefs","'useEffect' is defined but never used.","'useSyncExternalStore' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["303"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},"Update the dependencies array to be: [theme.backgroundColor]",{"range":"310","text":"311"},"Update the dependencies array to be: [date, hj, id, tasks]",{"range":"312","text":"313"},"Update the dependencies array to be: [fetchData]",{"range":"314","text":"315"},[798,800],"[theme.backgroundColor]",[1780,1782],"[date, hj, id, tasks]",[1783,1785],"[fetchData]"]