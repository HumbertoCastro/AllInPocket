{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/WeatherComponents/WeatherForm/WeatherForm.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport fetchCountryNames from '../../../helpers/GeonamesReq';\nimport fetchStatesByCountry from '../../../helpers/geonamesReqWithCounty';\nimport fetchCitiesByState from '../../../helpers/GeonamesReqWIthStates';\nimport pocketContext from '../../../context/pocketContext';\nimport Loading from '../../Inputs/Loading/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeatherForm = _ref => {\n  _s();\n  let {\n    callback,\n    setLoad\n  } = _ref;\n  const {\n    theme\n  } = useContext(pocketContext);\n  const [country, setCountry] = useState(null);\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [countryOptions, setCountrys] = useState(null);\n  const [showStates, setShowStates] = useState(false);\n  const [stateOptions, setStateOptions] = useState(null);\n  const [showCities, setShowCities] = useState(false);\n  const [citiesOptions, setCitiesOptions] = useState(null);\n  async function handleCountryChange(_ref2) {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    setShowCities(false);\n    setShowStates(false);\n    setCountry(value);\n    setLoad(true);\n    console.log(value);\n    const res = await fetchStatesByCountry(value);\n    setLoad(false);\n    console.log(res);\n    setStateOptions(res);\n    setShowStates(true);\n  }\n  ;\n  async function handleCityChange(_ref3) {\n    let {\n      target: {\n        value\n      }\n    } = _ref3;\n    setCity(value);\n    console.log(value);\n  }\n  async function handleStateChange(_ref4) {\n    let {\n      target: {\n        value\n      }\n    } = _ref4;\n    setShowCities(false);\n    setState(value);\n    setLoad(true);\n    const res = await fetchCitiesByState(country, value);\n    setLoad(false);\n    setCitiesOptions(res);\n    setShowCities(true);\n  }\n  ;\n  async function fetchData() {\n    setLoad(true);\n    const res = await fetchCountryNames();\n    setLoad(false);\n    setCountrys(res);\n  }\n  async function fetchDataWithCountry(country) {}\n  useEffect(() => {\n    fetchData();\n  }, []);\n  console.log(typeof countryOptions);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      callback(city);\n    },\n    children: countryOptions ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scale-in-center select-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: theme.textColor\n          },\n          children: \"Country:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleCountryChange,\n          className: \"select-cep\",\n          style: {\n            backgroundColor: theme.backgroundColor,\n            color: theme.textColor\n          },\n          children: countryOptions.map(_ref5 => {\n            let {\n              value,\n              label\n            } = _ref5;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: value,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 61\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), showStates ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scale-in-center select-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: theme.textColor\n          },\n          children: \"State:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleStateChange,\n          className: \"select-cep\",\n          style: {\n            backgroundColor: theme.backgroundColor,\n            color: theme.textColor\n          },\n          children: stateOptions.map(_ref6 => {\n            let {\n              value,\n              label\n            } = _ref6;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: value,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 61\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this) : null, showCities ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scale-in-center select-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: theme.textColor\n          },\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleCityChange,\n          className: \"select-cep\",\n          style: {\n            backgroundColor: theme.backgroundColor,\n            color: theme.textColor\n          },\n          children: citiesOptions.map(_ref7 => {\n            let {\n              value,\n              label\n            } = _ref7;\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: value,\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 62\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this) : null, city && country && state ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-search scale-in-center\",\n        children: \"Buscar Clima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 42\n      }, this) : null]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForm, \"GfYA0PM80sD0Xr4+2bWOwelz1Ts=\");\n_c = WeatherForm;\nexport default WeatherForm;\nvar _c;\n$RefreshReg$(_c, \"WeatherForm\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Select","fetchCountryNames","fetchStatesByCountry","fetchCitiesByState","pocketContext","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherForm","_ref","_s","callback","setLoad","theme","country","setCountry","city","setCity","state","setState","countryOptions","setCountrys","showStates","setShowStates","stateOptions","setStateOptions","showCities","setShowCities","citiesOptions","setCitiesOptions","handleCountryChange","_ref2","target","value","console","log","res","handleCityChange","_ref3","handleStateChange","_ref4","fetchData","fetchDataWithCountry","onSubmit","event","preventDefault","children","className","style","color","textColor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","backgroundColor","map","_ref5","label","_ref6","_ref7","type","_c","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/WeatherComponents/WeatherForm/WeatherForm.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport fetchCountryNames from '../../../helpers/GeonamesReq';\nimport fetchStatesByCountry from '../../../helpers/geonamesReqWithCounty';\nimport fetchCitiesByState from '../../../helpers/GeonamesReqWIthStates';\nimport pocketContext from '../../../context/pocketContext';\nimport Loading from '../../Inputs/Loading/Loading';\n\nconst WeatherForm = ({callback, setLoad}) => {\n  const {\n    theme,\n  } = useContext(pocketContext);\n\n  const [country, setCountry] = useState(null);\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [countryOptions, setCountrys] = useState(null);\n  const [showStates, setShowStates] = useState(false);\n  const [stateOptions, setStateOptions] = useState(null);\n  const [showCities, setShowCities] = useState(false);\n  const [citiesOptions, setCitiesOptions] = useState(null);\n\n  async function handleCountryChange({ target: { value } }) {\n    setShowCities(false);\n    setShowStates(false);\n    setCountry(value);\n    setLoad(true);\n    console.log(value);\n    const res = await fetchStatesByCountry(value);\n    setLoad(false);\n    console.log(res)\n    setStateOptions(res);\n    setShowStates(true);\n  };\n\n  async function handleCityChange({ target: { value } }) {\n    setCity(value);\n    console.log(value);\n  }\n\n  async function handleStateChange({ target: { value } }) {\n    setShowCities(false);\n    setState(value);\n    setLoad(true);\n    const res = await fetchCitiesByState(country, value);\n    setLoad(false);\n    setCitiesOptions(res);\n    setShowCities(true);\n  };\n  async function fetchData() {\n    setLoad(true);\n    const res = await fetchCountryNames();\n    setLoad(false);\n    setCountrys(res);\n  }\n\n  async function fetchDataWithCountry (country) {\n\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  console.log(typeof countryOptions);\n\n  return (\n    <form onSubmit={(event) => {\n      event.preventDefault();\n      callback(city);\n    }}>\n      {\n        countryOptions ? (\n          <>\n            <div className='scale-in-center select-div'>\n              <label style={ { color: theme.textColor } }>Country:</label>\n              <select onChange={handleCountryChange} className='select-cep' style={{ backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n                {\n                  countryOptions.map(({ value, label }) => (<option value={ value }>{ label }</option>))\n                }\n              </select>\n            </div>\n            {\n              showStates ? \n              <div className='scale-in-center select-div'>\n                <label style={ { color: theme.textColor } }>State:</label>\n                <select onChange={handleStateChange} className='select-cep' style={{ backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n                  {\n                    stateOptions.map(({ value, label }) => (<option value={ value }>{ label }</option>))\n                  }\n                </select>\n              </div> : null\n            }\n            {\n              showCities ? \n              <div className='scale-in-center select-div'>\n                <label style={ { color: theme.textColor } }>City:</label>\n                <select onChange={handleCityChange} className='select-cep' style={{ backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n                  {\n                    citiesOptions.map(({ value, label }) => (<option value={ value }>{ label }</option>))\n                  }\n                </select>\n              </div> : null\n            }\n            {\n              city && country && state ? <button type=\"submit\" className='btn-search scale-in-center'>Buscar Clima</button> : null\n            }\n          </>\n          ) : <Loading />\n      }\n    </form>\n  );\n};\n\nexport default WeatherForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}