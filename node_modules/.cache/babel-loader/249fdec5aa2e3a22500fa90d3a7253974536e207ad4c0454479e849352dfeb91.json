{"ast":null,"code":"const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst types = ['food', 'delivery', 'rent', 'gym', 'car insurence', 'life insurence', 'cleaning', 'education', 'light', 'water', 'gas', 'internet', 'Restaurants', 'drug store', 'self care', 'medic', 'dentist', 'car', 'travel', 'present', 'cloats'];\nconst yearFinance = monthNames.map(month => {\n  const mockObjects = [];\n  for (let i = 0; i < 31; i += 1) {\n    const x = types[Math.floor(Math.random() * types.length)];\n    const valor = Math.floor(Math.random() * 10000);\n    mockObjects.push({\n      date: i,\n      value: valor,\n      type: x,\n      card: 'meu cartao',\n      name: 'compra fake'\n    });\n  }\n  return {\n    month,\n    transactions: mockObjects\n  };\n});\nexport default yearFinance;","map":{"version":3,"names":["monthNames","types","yearFinance","map","month","mockObjects","i","x","Math","floor","random","length","valor","push","date","value","type","card","name","transactions"],"sources":["/home/humberto/all-in-pocket/src/helpers/mockFinance.js"],"sourcesContent":["const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst types = ['food', 'delivery', 'rent', 'gym', 'car insurence', 'life insurence', 'cleaning', 'education', \n'light', 'water', 'gas', 'internet', 'Restaurants', 'drug store', 'self care', 'medic', 'dentist', 'car', 'travel', 'present', 'cloats']\n\nconst yearFinance = monthNames.map((month) => {\n  const mockObjects = [];\n  for (let i = 0; i < 31; i += 1) {\n    const x = types[Math.floor(Math.random()*types.length)];\n    const valor = Math.floor(Math.random() * 10000);\n    mockObjects.push({\n      date: i,\n      value: valor,\n      type: x,\n      card: 'meu cartao',\n      name: 'compra fake',\n    })\n  }\n  return (\n    {\n      month,\n      transactions: mockObjects,\n    }\n  )\n});\n\nexport default yearFinance;"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EACxE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CACjE;AAED,MAAMC,KAAK,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,EAAE,WAAW,EAC5G,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;AAExI,MAAMC,WAAW,GAAGF,UAAU,CAACG,GAAG,CAAEC,KAAK,IAAK;EAC5C,MAAMC,WAAW,GAAG,EAAE;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,IAAI,CAAC,EAAE;IAC9B,MAAMC,CAAC,GAAGN,KAAK,CAACO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAACT,KAAK,CAACU,MAAM,CAAC,CAAC;IACvD,MAAMC,KAAK,GAAGJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC;IAC/CL,WAAW,CAACQ,IAAI,CAAC;MACfC,IAAI,EAAER,CAAC;MACPS,KAAK,EAAEH,KAAK;MACZI,IAAI,EAAET,CAAC;MACPU,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EACA,OACE;IACEd,KAAK;IACLe,YAAY,EAAEd;EAChB,CAAC;AAEL,CAAC,CAAC;AAEF,eAAeH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}