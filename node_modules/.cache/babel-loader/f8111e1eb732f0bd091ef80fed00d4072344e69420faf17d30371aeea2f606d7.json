{"ast":null,"code":"import _defineProperty from\"/home/humberto/all-in-pocket/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"/home/humberto/all-in-pocket/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/humberto/all-in-pocket/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useState}from'react';import TransactionCard from'../TransactionCard/TransactionCard';import pocketContext from'../../../context/pocketContext';import InputText from'../../Inputs/InputText/InputText';import svgs from'../../../helpers/svg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MonthProfit=function MonthProfit(_ref){var month=_ref.month,finances=_ref.finances,callback=_ref.callback;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];console.log(month);var _useContext=useContext(pocketContext),prTypes=_useContext.prTypes,setPrtypes=_useContext.setPrtypes;var newTypes=prTypes.map(function(tipo){return _defineProperty({},tipo,_toConsumableArray(finances.filter(function(x){return x.month===month;})[0].profit.filter(function(x){return x.type===tipo;})).sort(function(a,b){return b.date-a.date;}));});var handleChange=function handleChange(_ref3){var value=_ref3.target.value;if(value.length>0){setName(value);}};var handleClick=function handleClick(){if(name.length){setPrtypes([].concat(_toConsumableArray(prTypes),[name]));setName('');localStorage.setItem('prTypes',JSON.stringify([].concat(_toConsumableArray(prTypes),[name])));}};var deleteCategory=function deleteCategory(category){console.log(prTypes.filter(function(x){return x!==category;}),category);setPrtypes(prTypes.filter(function(x){return x!==category;}));localStorage.setItem('prTypes',JSON.stringify(prTypes.filter(function(x){return x!==category;})));};return/*#__PURE__*/_jsxs(\"div\",{className:\"month-expenses\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(InputText,{placename:\"set new category\",callback:handleChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,children:svgs.plus()})]}),newTypes.map(function(x){return/*#__PURE__*/_jsx(TransactionCard,{array:x,color:\"green\",callback:callback,finances:finances,month:month,isProfit:true,deleteCategory:deleteCategory});})]});};MonthProfit.defaultProps={};export default MonthProfit;","map":{"version":3,"names":["React","useContext","useState","TransactionCard","pocketContext","InputText","svgs","jsx","_jsx","jsxs","_jsxs","MonthProfit","_ref","month","finances","callback","_useState","_useState2","_slicedToArray","name","setName","console","log","_useContext","prTypes","setPrtypes","newTypes","map","tipo","_defineProperty","_toConsumableArray","filter","x","profit","type","sort","a","b","date","handleChange","_ref3","value","target","length","handleClick","concat","localStorage","setItem","JSON","stringify","deleteCategory","category","className","children","placename","onClick","plus","array","color","isProfit","defaultProps"],"sources":["/home/humberto/all-in-pocket/src/components/FinanceComponents/MonthProfit/MonthProfit.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionCard from '../TransactionCard/TransactionCard';\nimport pocketContext from '../../../context/pocketContext';\nimport InputText from '../../Inputs/InputText/InputText';\nimport svgs from '../../../helpers/svg';\n\nconst MonthProfit = ({ month, finances, callback }) => {\n  const [name, setName] = useState('');\n  console.log(month);\n\n  const {\n    prTypes,\n    setPrtypes,\n  } = useContext(pocketContext);\n\n  const newTypes = prTypes.map((tipo) => {\n    return {\n      [tipo]: [...finances.filter((x) => x.month === month)[0].profit.filter((x) => x.type === tipo)].sort((a, b) => {\n        return b.date - a.date\n      }),\n    }\n  })\n\n  const handleChange = ({ target: { value } }) => {\n    if (value.length > 0 ) {\n      setName(value);\n    }\n  }\n\n  const handleClick = () => {\n    if (name.length) {\n      setPrtypes([...prTypes, name]);\n      setName('');\n      localStorage.setItem('prTypes', JSON.stringify([...prTypes, name]));\n    }\n  }\n\n  const deleteCategory = (category) => {\n    console.log(prTypes.filter((x) => x !== category), category)\n    setPrtypes(prTypes.filter((x) => x !== category));\n    localStorage.setItem('prTypes', JSON.stringify(prTypes.filter((x) => x !== category)));\n  }\n\n  return (\n    <div className='month-expenses'>\n      <div className='row'>\n        <InputText placename=\"set new category\" callback={ handleChange }/>\n        <button onClick={ handleClick }>{ svgs.plus() }</button>\n      </div>\n      {\n        newTypes.map((x) => {\n          return (\n            <TransactionCard  array={ x } color=\"green\" callback={ callback } finances={ finances } month={ month } isProfit={true} deleteCategory={deleteCategory} />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nMonthProfit.propTypes = {};\n\nMonthProfit.defaultProps = {};\n\nexport default MonthProfit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}