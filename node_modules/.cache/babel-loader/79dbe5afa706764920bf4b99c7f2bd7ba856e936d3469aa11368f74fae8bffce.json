{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/FinanceComponents/Finance/Finance.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../finance.css';\nimport OverViewFinance from '../OverViewFinance/OverViewFinance';\nimport MonthExpenses from '../MonthExpenses/MonthExpenses';\nimport pocketContext from '../../../context/pocketContext';\nimport MonthProfit from '../MonthProfit/MonthProfit';\nimport AddTransaction from '../AddTransaction/AddTransaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst Finance = () => {\n  _s();\n  const date = new Date();\n  let month = monthNames[date.getMonth()];\n  const {\n    finances,\n    theme\n  } = useContext(pocketContext);\n  const [atualDisplay, setActualDisplay] = useState('expenses');\n  const [useMonth, setUseMonth] = useState(month);\n  const callbackChangeFinances = (newFinances, display) => {\n    setUseFinances(newFinances);\n    if (!display) {\n      if (atualDisplay === 'expenses') {\n        setDisplay( /*#__PURE__*/_jsxDEV(MonthExpenses, {\n          finances: useFinances,\n          month: useMonth,\n          callback: callbackChangeFinances\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this));\n      } else if (atualDisplay === 'profit') {\n        setDisplay( /*#__PURE__*/_jsxDEV(MonthProfit, {\n          finances: useFinances,\n          month: useMonth,\n          callback: callbackChangeFinances\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }, this));\n      }\n    } else {\n      if (display === 'expenses') {\n        setDisplay( /*#__PURE__*/_jsxDEV(MonthExpenses, {\n          finances: useFinances,\n          month: useMonth,\n          callback: callbackChangeFinances\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }, this));\n      } else if (display === 'profit') {\n        setDisplay( /*#__PURE__*/_jsxDEV(MonthProfit, {\n          finances: useFinances,\n          month: useMonth,\n          callback: callbackChangeFinances\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }, this));\n      }\n    }\n  };\n  const [display, setDisplay] = useState( /*#__PURE__*/_jsxDEV(MonthExpenses, {\n    finances: finances,\n    month: useMonth,\n    callback: callbackChangeFinances\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 42\n  }, this));\n  const [useFinances, setUseFinances] = useState(finances);\n  const handleSelect = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setUseMonth(value);\n    if (atualDisplay === 'expenses') {\n      setDisplay( /*#__PURE__*/_jsxDEV(MonthExpenses, {\n        finances: useFinances,\n        month: value,\n        callback: callbackChangeFinances\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this));\n    } else if (atualDisplay === 'profit') {\n      setDisplay( /*#__PURE__*/_jsxDEV(MonthProfit, {\n        finances: useFinances,\n        month: value,\n        callback: callbackChangeFinances\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }, this));\n    }\n  };\n  const handleSelectTransactions = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    setActualDisplay(value);\n    if (value === 'expenses') {\n      setDisplay( /*#__PURE__*/_jsxDEV(MonthExpenses, {\n        finances: useFinances,\n        month: useMonth,\n        callback: callbackChangeFinances\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this));\n    } else if (value === 'profit') {\n      setDisplay( /*#__PURE__*/_jsxDEV(MonthProfit, {\n        finances: useFinances,\n        month: useMonth,\n        callback: callbackChangeFinances\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"finance-select-plus colunm\",\n      onChange: handleSelect,\n      value: useMonth,\n      style: {\n        backgroundColor: theme.backgroundColor,\n        color: theme.textColor\n      },\n      children: monthNames.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: x,\n        children: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OverViewFinance, {\n      finances: useFinances,\n      month: useMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransaction, {\n      callback: callbackChangeFinances,\n      useMonth: useMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"select-p row\",\n      style: {\n        backgroundColor: theme.backgroundColor,\n        color: theme.textColor\n      },\n      children: [\"This month\", /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"colunm\",\n        onChange: handleSelectTransactions,\n        style: {\n          backgroundColor: theme.backgroundColor,\n          color: theme.textColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" expenses \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" profit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), display]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Finance, \"oVuFErFS+9HTQu6oDrjbb+s+gTs=\");\n_c = Finance;\nFinance.propTypes = {};\nFinance.defaultProps = {};\nexport default Finance;\nvar _c;\n$RefreshReg$(_c, \"Finance\");","map":{"version":3,"names":["React","useContext","useState","PropTypes","OverViewFinance","MonthExpenses","pocketContext","MonthProfit","AddTransaction","jsxDEV","_jsxDEV","monthNames","Finance","_s","date","Date","month","getMonth","finances","theme","atualDisplay","setActualDisplay","useMonth","setUseMonth","callbackChangeFinances","newFinances","display","setUseFinances","setDisplay","useFinances","callback","fileName","_jsxFileName","lineNumber","columnNumber","handleSelect","_ref","target","value","handleSelectTransactions","_ref2","children","className","onChange","style","backgroundColor","color","textColor","map","x","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/FinanceComponents/Finance/Finance.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../finance.css'\nimport OverViewFinance from '../OverViewFinance/OverViewFinance';\nimport MonthExpenses from '../MonthExpenses/MonthExpenses';\nimport pocketContext from '../../../context/pocketContext';\nimport MonthProfit from '../MonthProfit/MonthProfit';\nimport AddTransaction from '../AddTransaction/AddTransaction';\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n\nconst Finance = () => {\n  const date = new Date();\n  let month = monthNames[date.getMonth()];\n\n  const {\n    finances,\n    theme,\n  } = useContext(pocketContext);\n\n  const [atualDisplay, setActualDisplay] = useState('expenses')\n  const [useMonth, setUseMonth] = useState(month);\n\n  const callbackChangeFinances = (newFinances, display) => {\n    setUseFinances(newFinances);\n    if (!display) {\n      if (atualDisplay === 'expenses') {\n        setDisplay(<MonthExpenses finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      } else if (atualDisplay === 'profit') {\n        setDisplay(<MonthProfit finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      }\n    } else {\n      if (display === 'expenses') {\n        setDisplay(<MonthExpenses finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      } else if (display === 'profit') {\n        setDisplay(<MonthProfit finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      }\n    }\n  }\n\n  const [display, setDisplay] = useState(<MonthExpenses finances={ finances } month={ useMonth } callback={ callbackChangeFinances } />);\n  const [useFinances, setUseFinances] = useState(finances);\n\n  const handleSelect = ({ target: { value } }) => {\n    setUseMonth(value)\n    if (atualDisplay === 'expenses') {\n      setDisplay(<MonthExpenses finances={ useFinances } month={ value } callback={ callbackChangeFinances } />)\n    } else if (atualDisplay === 'profit') {\n      setDisplay(<MonthProfit finances={ useFinances } month={ value } callback={ callbackChangeFinances } />)\n    }\n  }\n\n  const handleSelectTransactions = ({ target: { value }}) => {\n    setActualDisplay(value);\n    if (value === 'expenses') {\n      setDisplay(<MonthExpenses finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n    } else if (value === 'profit') {\n      setDisplay(<MonthProfit finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n    } \n  }\n\n  return (\n    <div>\n      <select className='finance-select-plus colunm' onChange={ handleSelect } value={ useMonth }\n      style={ { backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n        {\n          monthNames.map((x) => (\n            <option value={x}>{ x }</option>\n          ))\n        }\n      </select>\n      <OverViewFinance finances={ useFinances } month={ useMonth }/>\n      <AddTransaction callback={ callbackChangeFinances } useMonth={ useMonth } />\n      <p className='select-p row' style={ { backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n        This month\n        <select className='colunm' onChange={ handleSelectTransactions } style={ { backgroundColor: theme.backgroundColor, color: theme.textColor }}>\n          <option> expenses </option>\n          <option> profit </option>\n        </select>\n      </p>\n      {\n        display\n      }\n    </div>\n  )\n};\n\nFinance.propTypes = {};\n\nFinance.defaultProps = {};\n\nexport default Finance;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}