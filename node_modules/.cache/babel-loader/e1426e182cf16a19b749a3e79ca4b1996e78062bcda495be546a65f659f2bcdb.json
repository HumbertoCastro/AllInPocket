{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/FinanceComponents/MonthProfit/MonthProfit.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionCard from '../TransactionCard/TransactionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst types = ['food', 'delivery', 'rent', 'gym', 'car insurence', 'life insurence', 'cleaning', 'education', 'light', 'water', 'gas', 'internet', 'Restaurants', 'drug store', 'self care', 'medic', 'dentist', 'car', 'travel', 'present', 'cloats'];\nconst MonthProfit = _ref => {\n  let {\n    month,\n    finances\n  } = _ref;\n  const date = new Date();\n  const monthNumber = date.getMonth() > 9 ? date.getMonth() : `0${date.getMonth()}`;\n  const thisMonthProfit = finances.filter(x => x.month === month)[0].profit.sort((a, b) => {\n    return b.date - a.date;\n  });\n  const newTypes = types.map(tipo => {\n    return {\n      [tipo]: [...finances.filter(x => x.month === month)[0].profit.filter(x => x.type === tipo)]\n    };\n  });\n  console.log(newTypes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"month-expenses\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This Month Profits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), thisMonthProfit.map(_ref2 => {\n      let {\n        date,\n        name,\n        type,\n        value,\n        color\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(TransactionCard, {\n        date: date,\n        name: name,\n        type: type,\n        value: value,\n        monthNumber: monthNumber,\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = MonthProfit;\nMonthProfit.propTypes = {};\nMonthProfit.defaultProps = {};\nexport default MonthProfit;\nvar _c;\n$RefreshReg$(_c, \"MonthProfit\");","map":{"version":3,"names":["React","PropTypes","TransactionCard","jsxDEV","_jsxDEV","types","MonthProfit","_ref","month","finances","date","Date","monthNumber","getMonth","thisMonthProfit","filter","x","profit","sort","a","b","newTypes","map","tipo","type","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","name","value","color","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/FinanceComponents/MonthProfit/MonthProfit.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionCard from '../TransactionCard/TransactionCard';\n\nconst types = ['food', 'delivery', 'rent', 'gym', 'car insurence', 'life insurence', 'cleaning', 'education', \n'light', 'water', 'gas', 'internet', 'Restaurants', 'drug store', 'self care', 'medic', 'dentist', 'car', 'travel', 'present', 'cloats']\n\nconst MonthProfit = ({ month, finances }) => {\n  const date = new Date();\n  const monthNumber = date.getMonth() > 9 ? date.getMonth() : `0${date.getMonth()}`;\n  const thisMonthProfit = finances.filter((x) => x.month === month)[0].profit.sort((a, b) => {\n    return b.date - a.date\n  });\n\n  const newTypes = types.map((tipo) => {\n    return {\n      [tipo]: [...finances.filter((x) => x.month === month)[0].profit.filter((x) => x.type === tipo)],\n    }\n  })\n\n  console.log(newTypes);\n\n  return (\n    <div className='month-expenses'>\n      <p>This Month Profits</p>\n      {\n        thisMonthProfit.map(({ date, name, type, value, color }) => {\n          return (\n            <TransactionCard  date={ date } name={ name } type={ type } value={ value } monthNumber={ monthNumber } color={ \"green\" } />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nMonthProfit.propTypes = {};\n\nMonthProfit.defaultProps = {};\n\nexport default MonthProfit;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,eAAe,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,KAAK,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,EAAE,WAAW,EAC5G,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;AAExI,MAAMC,WAAW,GAAGC,IAAA,IAAyB;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACtC,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvB,MAAMC,WAAW,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAGH,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAI,IAAGH,IAAI,CAACG,QAAQ,CAAC,CAAE,EAAC;EACjF,MAAMC,eAAe,GAAGL,QAAQ,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACR,KAAK,KAAKA,KAAK,CAAC,CAAC,CAAC,CAAC,CAACS,MAAM,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACzF,OAAOA,CAAC,CAACV,IAAI,GAAGS,CAAC,CAACT,IAAI;EACxB,CAAC,CAAC;EAEF,MAAMW,QAAQ,GAAGhB,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAAK;IACnC,OAAO;MACL,CAACA,IAAI,GAAG,CAAC,GAAGd,QAAQ,CAACM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACR,KAAK,KAAKA,KAAK,CAAC,CAAC,CAAC,CAAC,CAACS,MAAM,CAACF,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACQ,IAAI,KAAKD,IAAI,CAAC;IAChG,CAAC;EACH,CAAC,CAAC;EAEFE,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EAErB,oBACEjB,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BxB,OAAA;MAAAwB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEvBlB,eAAe,CAACQ,GAAG,CAACW,KAAA,IAAwC;MAAA,IAAvC;QAAEvB,IAAI;QAAEwB,IAAI;QAAEV,IAAI;QAAEW,KAAK;QAAEC;MAAM,CAAC,GAAAH,KAAA;MACrD,oBACE7B,OAAA,CAACF,eAAe;QAAEQ,IAAI,EAAGA,IAAM;QAACwB,IAAI,EAAGA,IAAM;QAACV,IAAI,EAAGA,IAAM;QAACW,KAAK,EAAGA,KAAO;QAACvB,WAAW,EAAGA,WAAa;QAACwB,KAAK,EAAG;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAEhI,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV,CAAC;AAAAK,EAAA,GA3BK/B,WAAW;AA6BjBA,WAAW,CAACgC,SAAS,GAAG,CAAC,CAAC;AAE1BhC,WAAW,CAACiC,YAAY,GAAG,CAAC,CAAC;AAE7B,eAAejC,WAAW;AAAC,IAAA+B,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}