{"ast":null,"code":"import axios from 'axios';\nconst fetchStatesByCountry = async countryCode => {\n  const headers = new Headers();\n  headers.append(\"X-CSCAPI-KEY\", \"API_KEY\");\n  const requestOptions = {\n    method: 'GET',\n    headers: headers,\n    redirect: 'follow'\n  };\n  try {\n    const response = await axios.get(`https://api.countrystatecity.in/v1/countries/${countryCode}/states`, requestOptions);\n    const states = response.data.map(state => state.name);\n    return states;\n  } catch (error) {\n    console.error('Erro ao buscar estados:', error);\n    return [];\n  }\n};\nexport default fetchStatesByCountry;","map":{"version":3,"names":["axios","fetchStatesByCountry","countryCode","headers","Headers","append","requestOptions","method","redirect","response","get","states","data","map","state","name","error","console"],"sources":["/home/humberto/all-in-pocket/src/helpers/geonamesReqWithCounty.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst fetchStatesByCountry = async (countryCode) => {\n  const headers = new Headers();\n  headers.append(\"X-CSCAPI-KEY\", \"API_KEY\");\n  const requestOptions = {\n    method: 'GET',\n    headers: headers,\n    redirect: 'follow'\n   };\n  try {\n    const response = await axios.get(`https://api.countrystatecity.in/v1/countries/${countryCode}/states`, requestOptions);\n\n    const states = response.data.map((state) => state.name);\n\n    return states;\n  } catch (error) {\n    console.error('Erro ao buscar estados:', error);\n    return [];\n  }\n};\n\nexport default fetchStatesByCountry;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,oBAAoB,GAAG,MAAOC,WAAW,IAAK;EAClD,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC7BD,OAAO,CAACE,MAAM,CAAC,cAAc,EAAE,SAAS,CAAC;EACzC,MAAMC,cAAc,GAAG;IACrBC,MAAM,EAAE,KAAK;IACbJ,OAAO,EAAEA,OAAO;IAChBK,QAAQ,EAAE;EACX,CAAC;EACF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,gDAA+CR,WAAY,SAAQ,EAAEI,cAAc,CAAC;IAEtH,MAAMK,MAAM,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;IAEvD,OAAOJ,MAAM;EACf,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,EAAE;EACX;AACF,CAAC;AAED,eAAef,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}