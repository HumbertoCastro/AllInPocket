{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/TaskListComponents/BlockOfNotes/BlockOfNotes.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport svgs from '../../../helpers/svg';\nimport '../task.css';\nimport pocketContext from '../../../context/pocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlockOfNotes = _ref => {\n  _s();\n  let {\n    id,\n    notes,\n    setNotes,\n    setShow\n  } = _ref;\n  const [text, setText] = useState(notes.find(x => x.id === id).content);\n  const {\n    theme\n  } = useContext(pocketContext);\n  const handleChange = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    setText(value);\n    notes.find(x => x.id === id).content = value;\n    setNotes(notes);\n    localStorage.setItem('notes', JSON.stringify(notes));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"block-note colunm\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: handleChange,\n      value: text,\n      placeholder: \"Write your notes here\",\n      style: {\n        backgroundColor: theme.primaryColor,\n        color: theme.textColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row blocks\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log('d');\n          setShow(false);\n        },\n        style: {\n          backgroundColor: theme.primaryColor,\n          color: theme.textColor\n        },\n        children: svgs.exit()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(BlockOfNotes, \"lCIi+OQA6+zWj0phrv5kFSwvfXY=\");\n_c = BlockOfNotes;\nBlockOfNotes.propTypes = {};\nBlockOfNotes.defaultProps = {};\nexport default BlockOfNotes;\nvar _c;\n$RefreshReg$(_c, \"BlockOfNotes\");","map":{"version":3,"names":["React","useContext","useState","svgs","pocketContext","jsxDEV","_jsxDEV","BlockOfNotes","_ref","_s","id","notes","setNotes","setShow","text","setText","find","x","content","theme","handleChange","_ref2","target","value","localStorage","setItem","JSON","stringify","className","children","onChange","placeholder","style","backgroundColor","primaryColor","color","textColor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","console","log","exit","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/TaskListComponents/BlockOfNotes/BlockOfNotes.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport svgs from '../../../helpers/svg';\nimport '../task.css'\nimport pocketContext from '../../../context/pocketContext';\n\n\nconst BlockOfNotes = ({ id, notes, setNotes, setShow }) => {\n  const [text, setText] = useState(notes.find((x) => x.id === id).content);\n  \n  const {\n    theme,\n  } = useContext(pocketContext);\n\n  const handleChange = ({ target: { value } }) => {\n    setText(value);\n    notes.find((x) => x.id === id).content = value;\n    setNotes(notes);\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }\n\n  return(\n    <div className='block-note colunm'>\n      <textarea onChange={ handleChange } value={ text } placeholder='Write your notes here'\n      style={ { backgroundColor: theme.primaryColor, color: theme.textColor }}>\n      </textarea>\n      <div className='row blocks'>\n        <button onClick={ () => { \n          console.log('d')\n          setShow(false)\n           }} style={ { backgroundColor: theme.primaryColor, color: theme.textColor }}>\n          {\n            svgs.exit()\n          }\n        </button>\n      </div>\n    </div>\n  )\n};\n\nBlockOfNotes.propTypes = {};\n\nBlockOfNotes.defaultProps = {};\n\nexport default BlockOfNotes;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,aAAa;AACpB,OAAOC,aAAa,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3D,MAAMC,YAAY,GAAGC,IAAA,IAAsC;EAAAC,EAAA;EAAA,IAArC;IAAEC,EAAE;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAAL,IAAA;EACpD,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAACS,KAAK,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE,CAAC,CAACQ,OAAO,CAAC;EAExE,MAAM;IACJC;EACF,CAAC,GAAGlB,UAAU,CAACG,aAAa,CAAC;EAE7B,MAAMgB,YAAY,GAAGC,KAAA,IAA2B;IAAA,IAA1B;MAAEC,MAAM,EAAE;QAAEC;MAAM;IAAE,CAAC,GAAAF,KAAA;IACzCN,OAAO,CAACQ,KAAK,CAAC;IACdZ,KAAK,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE,CAAC,CAACQ,OAAO,GAAGK,KAAK;IAC9CX,QAAQ,CAACD,KAAK,CAAC;IACfa,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAAChB,KAAK,CAAC,CAAC;EACtD,CAAC;EAED,oBACEL,OAAA;IAAKsB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCvB,OAAA;MAAUwB,QAAQ,EAAGV,YAAc;MAACG,KAAK,EAAGT,IAAM;MAACiB,WAAW,EAAC,uBAAuB;MACtFC,KAAK,EAAG;QAAEC,eAAe,EAAEd,KAAK,CAACe,YAAY;QAAEC,KAAK,EAAEhB,KAAK,CAACiB;MAAU;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACXlC,OAAA;MAAKsB,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBvB,OAAA;QAAQmC,OAAO,EAAGA,CAAA,KAAM;UACtBC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;UAChB9B,OAAO,CAAC,KAAK,CAAC;QACb,CAAE;QAACmB,KAAK,EAAG;UAAEC,eAAe,EAAEd,KAAK,CAACe,YAAY;UAAEC,KAAK,EAAEhB,KAAK,CAACiB;QAAU,CAAE;QAAAP,QAAA,EAE1E1B,IAAI,CAACyC,IAAI,CAAC;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA/BIF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAiClBA,YAAY,CAACuC,SAAS,GAAG,CAAC,CAAC;AAE3BvC,YAAY,CAACwC,YAAY,GAAG,CAAC,CAAC;AAE9B,eAAexC,YAAY;AAAC,IAAAsC,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}