{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/FinanceComponents/Finance/Finance.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../finance.css';\nimport OverViewFinance from '../OverViewFinance/OverViewFinance';\nimport MonthExpenses from '../MonthExpenses/MonthExpenses';\nimport pocketContext from '../../../context/pocketContext';\nimport MonthProfit from '../MonthProfit/MonthProfit';\nimport AllTransactions from '../AllTransactions/AllTransactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst Finance = () => {\n  _s();\n  const date = new Date();\n  const thisMonth = monthNames[date.getMonth()];\n  const {\n    finances\n  } = useContext(pocketContext);\n  const [month, setMonth] = useState(thisMonth);\n  const [display, setDisplay] = useState( /*#__PURE__*/_jsxDEV(MonthExpenses, {\n    finances: finances,\n    month: month\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 42\n  }, this));\n  const handleSelect = _ref => {\n    let {\n      target: {\n        value\n      }\n    } = _ref;\n    setMonth(value);\n  };\n  const handleSelectTransactions = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    if (value === 'expenses') {\n      setDisplay( /*#__PURE__*/_jsxDEV(MonthExpenses, {\n        finances: finances,\n        month: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this));\n    } else if (value === 'profit') {\n      setDisplay( /*#__PURE__*/_jsxDEV(MonthProfit, {\n        finances: finances,\n        month: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }, this));\n    } else {\n      setDisplay( /*#__PURE__*/_jsxDEV(AllTransactions, {\n        finances: finances,\n        month: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"finance-select colunm\",\n      onChange: handleSelect,\n      value: month,\n      children: monthNames.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: x,\n        children: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OverViewFinance, {\n      finances: finances,\n      month: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"finance-select colunm\",\n      onChange: handleSelectTransactions,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"expenses\",\n        children: \" expenses \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"profit\",\n        children: \" profit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \" All \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), display]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Finance, \"m9RfWjGwgS/ptuDGku9Z9lM3N/8=\");\n_c = Finance;\nFinance.propTypes = {};\nFinance.defaultProps = {};\nexport default Finance;\nvar _c;\n$RefreshReg$(_c, \"Finance\");","map":{"version":3,"names":["React","useContext","useState","PropTypes","OverViewFinance","MonthExpenses","pocketContext","MonthProfit","AllTransactions","jsxDEV","_jsxDEV","monthNames","Finance","_s","date","Date","thisMonth","getMonth","finances","month","setMonth","display","setDisplay","fileName","_jsxFileName","lineNumber","columnNumber","handleSelect","_ref","target","value","handleSelectTransactions","_ref2","children","className","onChange","map","x","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/FinanceComponents/Finance/Finance.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../finance.css'\nimport OverViewFinance from '../OverViewFinance/OverViewFinance';\nimport MonthExpenses from '../MonthExpenses/MonthExpenses';\nimport pocketContext from '../../../context/pocketContext';\nimport MonthProfit from '../MonthProfit/MonthProfit';\nimport AllTransactions from '../AllTransactions/AllTransactions';\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n\nconst Finance = () => {\n  const date = new Date();\n  const thisMonth = monthNames[date.getMonth()];\n\n  const {\n    finances,\n  } = useContext(pocketContext);\n\n  const [month, setMonth] = useState(thisMonth);\n  const [display, setDisplay] = useState(<MonthExpenses finances={ finances } month={ month }/>);\n\n  const handleSelect = ({ target: { value } }) => {\n    setMonth(value);\n  }\n\n  const handleSelectTransactions = ({ target: { value }}) => {\n    if (value === 'expenses') {\n      setDisplay(<MonthExpenses finances={ finances } month={ month }/>)\n    } else if (value === 'profit') {\n      setDisplay(<MonthProfit finances={ finances } month={ month }/>)\n    } else {\n      setDisplay(<AllTransactions finances={ finances } month={ month }/> )\n    }\n  }\n\n  return (\n    <div>\n      <select className='finance-select colunm' onChange={ handleSelect } value={ month }>\n        {\n          monthNames.map((x) => (\n            <option value={x}>{ x }</option>\n          ))\n        }\n      </select>\n      <OverViewFinance finances={ finances } month={ month }/>\n      <select className='finance-select colunm' onChange={ handleSelectTransactions }>\n        <option value=\"expenses\"> expenses </option>\n        <option value=\"profit\"> profit </option>\n        <option value=\"all\"> All </option>\n      </select>\n      {\n        display\n      }\n    </div>\n  )\n};\n\nFinance.propTypes = {};\n\nFinance.defaultProps = {};\n\nexport default Finance;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}