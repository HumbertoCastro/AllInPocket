{"ast":null,"code":"import _regeneratorRuntime from\"/home/humberto/all-in-pocket/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/humberto/all-in-pocket/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/humberto/all-in-pocket/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useEffect,useState}from'react';import Select from'react-select';import fetchCountryNames from'../../../helpers/GeonamesReq';import fetchStatesByCountry from'../../../helpers/geonamesReqWithCounty';import fetchCitiesByState from'../../../helpers/GeonamesReqWIthStates';import pocketContext from'../../../context/pocketContext';import Loading from'../../Inputs/Loading/Loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var WeatherForm=function WeatherForm(_ref){var callback=_ref.callback;var _useContext=useContext(pocketContext),theme=_useContext.theme;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),country=_useState2[0],setCountry=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),state=_useState6[0],setState=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),countryOptions=_useState8[0],setCountrys=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showStates=_useState10[0],setShowStates=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),stateOptions=_useState12[0],setStateOptions=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),showCities=_useState14[0],setShowCities=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),citiesOptions=_useState16[0],setCitiesOptions=_useState16[1];function handleCountryChange(_x){return _handleCountryChange.apply(this,arguments);}function _handleCountryChange(){_handleCountryChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref2){var value,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:value=_ref2.value;setShowCities(false);setShowStates(false);setCountry(value);_context.next=6;return fetchStatesByCountry(value);case 6:res=_context.sent;console.log(res);setStateOptions(res);setShowStates(true);case 10:case\"end\":return _context.stop();}},_callee);}));return _handleCountryChange.apply(this,arguments);};function handleCityChange(_x2){return _handleCityChange.apply(this,arguments);}function _handleCityChange(){_handleCityChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3){var value;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:value=_ref3.value;setCity(value);console.log(value);case 3:case\"end\":return _context2.stop();}},_callee2);}));return _handleCityChange.apply(this,arguments);}function handleStateChange(_x3){return _handleStateChange.apply(this,arguments);}function _handleStateChange(){_handleStateChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_ref4){var value,res;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:value=_ref4.value;setShowCities(false);setState(value);_context3.next=5;return fetchCitiesByState(country,value);case 5:res=_context3.sent;setCitiesOptions(res);setShowCities(true);case 8:case\"end\":return _context3.stop();}},_callee3);}));return _handleStateChange.apply(this,arguments);};function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var res;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetchCountryNames();case 2:res=_context4.sent;setCountrys(res);case 4:case\"end\":return _context4.stop();}},_callee4);}));return _fetchData.apply(this,arguments);}function fetchDataWithCountry(_x4){return _fetchDataWithCountry.apply(this,arguments);}function _fetchDataWithCountry(){_fetchDataWithCountry=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(country){return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:case\"end\":return _context5.stop();}},_callee5);}));return _fetchDataWithCountry.apply(this,arguments);}useEffect(function(){fetchData();},[]);console.log(typeof countryOptions);return/*#__PURE__*/_jsx(\"form\",{onSubmit:function onSubmit(event){event.preventDefault();callback(city);},children:countryOptions?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"scale-in-center\",children:[/*#__PURE__*/_jsx(\"label\",{style:{color:theme.textColor},children:\"Country:\"}),/*#__PURE__*/_jsx(Select,{options:countryOptions,onChange:handleCountryChange})]}),showStates?/*#__PURE__*/_jsxs(\"div\",{className:\"scale-in-center\",children:[/*#__PURE__*/_jsx(\"label\",{style:{color:theme.textColor},children:\"State:\"}),/*#__PURE__*/_jsx(Select,{options:stateOptions,onChange:handleStateChange})]}):null,showCities?/*#__PURE__*/_jsxs(\"div\",{className:\"scale-in-center\",children:[/*#__PURE__*/_jsx(\"label\",{style:{color:theme.textColor},children:\"City:\"}),/*#__PURE__*/_jsx(Select,{options:citiesOptions,onChange:handleCityChange})]}):null,city&&country&&state?/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-search scale-in-center\",children:\"Buscar Clima\"}):null]}):/*#__PURE__*/_jsx(Loading,{})});};export default WeatherForm;","map":{"version":3,"names":["React","useContext","useEffect","useState","Select","fetchCountryNames","fetchStatesByCountry","fetchCitiesByState","pocketContext","Loading","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","WeatherForm","_ref","callback","_useContext","theme","_useState","_useState2","_slicedToArray","country","setCountry","_useState3","_useState4","city","setCity","_useState5","_useState6","state","setState","_useState7","_useState8","countryOptions","setCountrys","_useState9","_useState10","showStates","setShowStates","_useState11","_useState12","stateOptions","setStateOptions","_useState13","_useState14","showCities","setShowCities","_useState15","_useState16","citiesOptions","setCitiesOptions","handleCountryChange","_x","_handleCountryChange","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","value","res","wrap","_callee$","_context","prev","next","sent","console","log","stop","handleCityChange","_x2","_handleCityChange","_callee2","_ref3","_callee2$","_context2","handleStateChange","_x3","_handleStateChange","_callee3","_ref4","_callee3$","_context3","fetchData","_fetchData","_callee4","_callee4$","_context4","fetchDataWithCountry","_x4","_fetchDataWithCountry","_callee5","_callee5$","_context5","onSubmit","event","preventDefault","children","className","style","color","textColor","options","onChange","type"],"sources":["/home/humberto/all-in-pocket/src/components/WeatherComponents/WeatherForm/WeatherForm.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport fetchCountryNames from '../../../helpers/GeonamesReq';\nimport fetchStatesByCountry from '../../../helpers/geonamesReqWithCounty';\nimport fetchCitiesByState from '../../../helpers/GeonamesReqWIthStates';\nimport pocketContext from '../../../context/pocketContext';\nimport Loading from '../../Inputs/Loading/Loading';\n\nconst WeatherForm = ({callback}) => {\n  const {\n    theme,\n  } = useContext(pocketContext);\n\n  const [country, setCountry] = useState(null);\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [countryOptions, setCountrys] = useState(null);\n  const [showStates, setShowStates] = useState(false);\n  const [stateOptions, setStateOptions] = useState(null);\n  const [showCities, setShowCities] = useState(false);\n  const [citiesOptions, setCitiesOptions] = useState(null);\n\n  async function handleCountryChange({ value }) {\n    setShowCities(false);\n    setShowStates(false);\n    setCountry(value);\n    const res = await fetchStatesByCountry(value);\n    console.log(res)\n    setStateOptions(res);\n    setShowStates(true);\n  };\n\n  async function handleCityChange({ value }) {\n    setCity(value);\n    console.log(value);\n  }\n\n  async function handleStateChange({ value }) {\n    setShowCities(false);\n    setState(value);\n    const res = await fetchCitiesByState(country, value);\n    setCitiesOptions(res);\n    setShowCities(true);\n  };\n  async function fetchData() {\n    const res = await fetchCountryNames();\n    setCountrys(res);\n  }\n\n  async function fetchDataWithCountry (country) {\n\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  console.log(typeof countryOptions);\n\n  return (\n    <form onSubmit={(event) => {\n      event.preventDefault();\n      callback(city);\n    }}>\n      {\n        countryOptions ? (\n          <>\n            <div className='scale-in-center'>\n              <label style={ { color: theme.textColor } }>Country:</label>\n              <Select options={countryOptions} onChange={handleCountryChange} />\n            </div>\n            {\n              showStates ? \n              <div className='scale-in-center'>\n                <label style={ { color: theme.textColor } }>State:</label>\n                <Select options={stateOptions} onChange={handleStateChange} />\n              </div> : null\n            }\n            {\n              showCities ? \n              <div className='scale-in-center'>\n                <label style={ { color: theme.textColor } }>City:</label>\n                <Select options={citiesOptions} onChange={handleCityChange} />\n              </div> : null\n            }\n            {\n              city && country && state ? <button type=\"submit\" className='btn-search scale-in-center'>Buscar Clima</button> : null\n            }\n          </>\n          ) : <Loading />\n      }\n    </form>\n  );\n};\n\nexport default WeatherForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}