{"ast":null,"code":"import axios from 'axios';\nconst fetchStatesByCountry = async countryName => {\n  try {\n    const response = await axios.get('https://nominatim.openstreetmap.org/search', {\n      params: {\n        q: countryName,\n        format: 'json',\n        addressdetails: 1,\n        limit: 100\n      }\n    });\n\n    // Filtrar os resultados para obter apenas os estados\n    const states = response.data.filter(result => result.type === 'state');\n\n    // Extrair os nomes dos estados\n    const stateNames = states.map(state => state.display_name);\n    console.log(response);\n    return stateNames;\n  } catch (error) {\n    console.error('Erro ao buscar estados:', error);\n    return [];\n  }\n};\nexport default fetchStatesByCountry;","map":{"version":3,"names":["axios","fetchStatesByCountry","countryName","response","get","params","q","format","addressdetails","limit","states","data","filter","result","type","stateNames","map","state","display_name","console","log","error"],"sources":["/home/humberto/all-in-pocket/src/helpers/geonamesReqWithCounty.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst fetchStatesByCountry = async (countryName) => {\n  try {\n    const response = await axios.get('https://nominatim.openstreetmap.org/search', {\n      params: {\n        q: countryName,\n        format: 'json',\n        addressdetails: 1,\n        limit: 100,\n      },\n    });\n\n    // Filtrar os resultados para obter apenas os estados\n    const states = response.data.filter((result) => result.type === 'state');\n\n    // Extrair os nomes dos estados\n    const stateNames = states.map((state) => state.display_name);\n    console.log(response)\n\n    return stateNames;\n  } catch (error) {\n    console.error('Erro ao buscar estados:', error);\n    return [];\n  }\n};\n\nexport default fetchStatesByCountry;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,oBAAoB,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,4CAA4C,EAAE;MAC7EC,MAAM,EAAE;QACNC,CAAC,EAAEJ,WAAW;QACdK,MAAM,EAAE,MAAM;QACdC,cAAc,EAAE,CAAC;QACjBC,KAAK,EAAE;MACT;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,IAAI,CAACC,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,KAAK,OAAO,CAAC;;IAExE;IACA,MAAMC,UAAU,GAAGL,MAAM,CAACM,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,YAAY,CAAC;IAC5DC,OAAO,CAACC,GAAG,CAACjB,QAAQ,CAAC;IAErB,OAAOY,UAAU;EACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,EAAE;EACX;AACF,CAAC;AAED,eAAepB,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}