{"ast":null,"code":"import _regeneratorRuntime from\"/home/humberto/all-in-pocket/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/humberto/all-in-pocket/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';var fetchCitiesByState=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(countryCode,stateCode){var headers,requestOptions,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;headers=new Headers();headers.append(\"X-CSCAPI-KEY\",process.env.API_KEY);console.log(process.env.API_KEY);requestOptions={method:'GET',headers:headers,redirect:'follow'};res=fetch(\"https://api.countrystatecity.in/v1/countries/\".concat(countryCode,\"/states/\").concat(stateCode,\"/cities\"),requestOptions).then(function(response){return response.json();}).then(function(jsonres){return jsonres.map(function(x){return{value:x.name,label:x.name};});}).catch(function(error){return error;});return _context.abrupt(\"return\",res);case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.error('Erro ao buscar cidades:',_context.t0);return _context.abrupt(\"return\",[]);case 13:case\"end\":return _context.stop();}},_callee,null,[[0,9]]);}));return function fetchCitiesByState(_x,_x2){return _ref.apply(this,arguments);};}();export default fetchCitiesByState;","map":{"version":3,"names":["axios","fetchCitiesByState","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","countryCode","stateCode","headers","requestOptions","res","wrap","_callee$","_context","prev","next","Headers","append","process","env","API_KEY","console","log","method","redirect","fetch","concat","then","response","json","jsonres","map","x","value","name","label","catch","error","abrupt","t0","stop","_x","_x2","apply","arguments"],"sources":["/home/humberto/all-in-pocket/src/helpers/GeonamesReqWIthStates.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst fetchCitiesByState = async (countryCode, stateCode) => {\n  try {\n    var headers = new Headers();\n    headers.append(\"X-CSCAPI-KEY\", process.env.API_KEY);\n    \n    console.log(process.env.API_KEY);\n\n    var requestOptions = {\n    method: 'GET',\n    headers: headers,\n    redirect: 'follow'\n    };\n\n    const res = fetch(`https://api.countrystatecity.in/v1/countries/${countryCode}/states/${stateCode}/cities`, requestOptions)\n    .then(response => response.json())\n    .then(jsonres => jsonres.map((x) => {\n      return {\n        value: x.name,\n        label: x.name,\n      }\n    }))\n    .catch(error => error);\n    return res;\n  } catch (error) {\n    console.error('Erro ao buscar cidades:', error);\n    return [];\n  }\n};\n\nexport default fetchCitiesByState;\n"],"mappings":"oPAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,GAAM,CAAAC,kBAAkB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,WAAW,CAAEC,SAAS,MAAAC,OAAA,CAAAC,cAAA,CAAAC,GAAA,QAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAEhDN,OAAO,CAAG,GAAI,CAAAQ,OAAO,CAAC,CAAC,CAC3BR,OAAO,CAACS,MAAM,CAAC,cAAc,CAAEC,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC,CAEnDC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC,CAE5BX,cAAc,CAAG,CACrBc,MAAM,CAAE,KAAK,CACbf,OAAO,CAAEA,OAAO,CAChBgB,QAAQ,CAAE,QACV,CAAC,CAEKd,GAAG,CAAGe,KAAK,iDAAAC,MAAA,CAAiDpB,WAAW,aAAAoB,MAAA,CAAWnB,SAAS,YAAWE,cAAc,CAAC,CAC1HkB,IAAI,CAAC,SAAAC,QAAQ,QAAI,CAAAA,QAAQ,CAACC,IAAI,CAAC,CAAC,GAAC,CACjCF,IAAI,CAAC,SAAAG,OAAO,QAAI,CAAAA,OAAO,CAACC,GAAG,CAAC,SAACC,CAAC,CAAK,CAClC,MAAO,CACLC,KAAK,CAAED,CAAC,CAACE,IAAI,CACbC,KAAK,CAAEH,CAAC,CAACE,IACX,CAAC,CACH,CAAC,CAAC,GAAC,CACFE,KAAK,CAAC,SAAAC,KAAK,QAAI,CAAAA,KAAK,GAAC,QAAAxB,QAAA,CAAAyB,MAAA,UACf5B,GAAG,SAAAG,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAA0B,EAAA,CAAA1B,QAAA,aAEVQ,OAAO,CAACgB,KAAK,CAAC,yBAAyB,CAAAxB,QAAA,CAAA0B,EAAO,CAAC,CAAC,OAAA1B,QAAA,CAAAyB,MAAA,UACzC,EAAE,2BAAAzB,QAAA,CAAA2B,IAAA,MAAAnC,OAAA,gBAEZ,kBA3BK,CAAAL,kBAAkBA,CAAAyC,EAAA,CAAAC,GAAA,SAAAzC,IAAA,CAAA0C,KAAA,MAAAC,SAAA,OA2BvB,CAED,cAAe,CAAA5C,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}