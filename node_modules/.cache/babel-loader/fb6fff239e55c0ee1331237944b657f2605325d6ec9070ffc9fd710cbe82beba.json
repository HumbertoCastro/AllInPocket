{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/WeatherComponents/WeatherForm/WeatherForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport fetchCountryNames from '../../../helpers/GeonamesReq';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeatherForm = () => {\n  _s();\n  const [country, setCountry] = useState(null);\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [countryOptions, setCountrys] = useState(null);\n  async function handleCountryChange(_ref) {\n    let {\n      value\n    } = _ref;\n    setCountry(value);\n    console.log(value);\n  }\n  ;\n  const handleCityChange = event => {\n    setCity(event.target.value);\n  };\n  const handleStateChange = event => {\n    setState(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Faça a requisição à API utilizando os valores selecionados ou digitados\n    console.log('País:', country);\n    console.log('Cidade:', city);\n    console.log('Estado:', state);\n  };\n  async function fetchData() {\n    const res = await fetchCountryNames();\n    setCountrys(res);\n  }\n  async function fetchDataWithCountry(country) {}\n  useEffect(() => {\n    fetchData();\n  }, []);\n  console.log(typeof countryOptions);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: countryOptions ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Pa\\xEDs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: countryOptions,\n          onChange: handleCountryChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Buscar Clima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherForm, \"bJMOI7fz3yVnAE+3wkaqsg7wcpo=\");\n_c = WeatherForm;\nexport default WeatherForm;\nvar _c;\n$RefreshReg$(_c, \"WeatherForm\");","map":{"version":3,"names":["React","useEffect","useState","Select","fetchCountryNames","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherForm","_s","country","setCountry","city","setCity","state","setState","countryOptions","setCountrys","handleCountryChange","_ref","value","console","log","handleCityChange","event","target","handleStateChange","handleSubmit","preventDefault","fetchData","res","fetchDataWithCountry","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","type","_c","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/WeatherComponents/WeatherForm/WeatherForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport fetchCountryNames from '../../../helpers/GeonamesReq';\n\nconst WeatherForm = () => {\n  const [country, setCountry] = useState(null);\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [countryOptions, setCountrys] = useState(null);\n  async function handleCountryChange({ value }) {\n    setCountry(value);\n    console.log(value);\n  };\n\n  const handleCityChange = event => {\n    setCity(event.target.value);\n  };\n\n  const handleStateChange = event => {\n    setState(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Faça a requisição à API utilizando os valores selecionados ou digitados\n    console.log('País:', country);\n    console.log('Cidade:', city);\n    console.log('Estado:', state);\n  };\n  async function fetchData() {\n    const res = await fetchCountryNames();\n    setCountrys(res);\n  }\n\n  async function fetchDataWithCountry (country) {\n    \n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  console.log(typeof countryOptions);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {\n        countryOptions ? (\n          <>\n            <div>\n              <label>País:</label>\n              <Select options={countryOptions} onChange={handleCountryChange} />\n            </div>\n            <button type=\"submit\">Buscar Clima</button>\n          </>\n          ) : null\n      }\n    </form>\n  );\n};\n\nexport default WeatherForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}