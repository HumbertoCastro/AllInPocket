{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/WeatherComponents/Weather/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport WeatherForm from '../WeatherForm/WeatherForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const fetchData = async location => {\n    const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n    try {\n      const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${location}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleClick = (country, state, city) => {\n    console.log(country, state, city);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(WeatherForm, {\n      callback: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), weatherData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.location.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: weatherData.current.condition.icon,\n        alt: \"weatherIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.current.temp_c, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.current.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"bz3WTkv9WK5s51p29VvW+nOlOFM=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","axios","WeatherForm","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","fetchData","location","apiKey","process","env","REACT_APP_WEATHER_API_KEY","response","get","data","error","console","log","handleClick","country","state","city","children","callback","fileName","_jsxFileName","lineNumber","columnNumber","name","src","current","condition","icon","alt","temp_c","humidity","_c","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/WeatherComponents/Weather/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport WeatherForm from '../WeatherForm/WeatherForm';\n\nconst Weather = () => {\n  const [weatherData, setWeatherData] = useState(null);\n\n  const fetchData = async (location) => {\n    const apiKey = process.env.REACT_APP_WEATHER_API_KEY;\n    try {\n      const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${location}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClick = (country, state, city) => {\n    console.log(country, state, city);\n  }\n\n  return (\n    <div>\n      <WeatherForm callback={ handleClick } />\n      {\n        weatherData ? <div>\n          <h2>{weatherData.location.name}</h2>\n          <img src={ weatherData.current.condition.icon } alt='weatherIcon' />\n          <p>Temperature: {weatherData.current.temp_c}Â°C</p>\n          <p>Humidity: {weatherData.current.humidity}%</p>\n        </div> : null\n      }\n    </div>\n  );\n};\n\nexport default Weather;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMS,SAAS,GAAG,MAAOC,QAAQ,IAAK;IACpC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;IACpD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,kDAAiDL,MAAO,MAAKD,QAAS,EAAC,CAAC;MAC1GF,cAAc,CAACO,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,WAAW,GAAGA,CAACC,OAAO,EAAEC,KAAK,EAAEC,IAAI,KAAK;IAC5CL,OAAO,CAACC,GAAG,CAACE,OAAO,EAAEC,KAAK,EAAEC,IAAI,CAAC;EACnC,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACF,WAAW;MAACwB,QAAQ,EAAGL;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEtCvB,WAAW,gBAAGH,OAAA;MAAAqB,QAAA,gBACZrB,OAAA;QAAAqB,QAAA,EAAKlB,WAAW,CAACG,QAAQ,CAACqB;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpC1B,OAAA;QAAK4B,GAAG,EAAGzB,WAAW,CAAC0B,OAAO,CAACC,SAAS,CAACC,IAAM;QAACC,GAAG,EAAC;MAAa;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpE1B,OAAA;QAAAqB,QAAA,GAAG,eAAa,EAAClB,WAAW,CAAC0B,OAAO,CAACI,MAAM,EAAC,OAAE;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAClD1B,OAAA;QAAAqB,QAAA,GAAG,YAAU,EAAClB,WAAW,CAAC0B,OAAO,CAACK,QAAQ,EAAC,GAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,GAAG,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9BID,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}