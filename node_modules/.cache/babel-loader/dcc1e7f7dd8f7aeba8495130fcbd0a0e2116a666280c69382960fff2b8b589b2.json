{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/FinanceComponents/AddTransaction/AddTransaction.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport pocketContext from '../../../context/pocketContext';\nimport InputText from '../../Inputs/InputText/InputText';\nimport Checkbox from '../../Inputs/checkbox/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst types = ['food', 'delivery', 'rent', 'gym', 'car insurence', 'life insurence', 'cleaning', 'education', 'light', 'water', 'gas', 'internet', 'Restaurants', 'drug store', 'self care', 'medic', 'dentist', 'car', 'travel', 'present', 'cloats'];\nconst typesSalary = ['Salary', 'Investiments', 'Sales', 'Others'];\nconst days = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\nconst AddTransaction = () => {\n  _s();\n  const [isProfit, setIsProfit] = useState(false);\n  const [name, setName] = useState('Transaction');\n  const [month, setMonth] = useState('May');\n  const [type, setType] = useState('food');\n  const [day, setDay] = useState(1);\n  const [value, setValue] = useState(0);\n  const {\n    setFinances,\n    finances\n  } = useContext(pocketContext);\n  const handleSelect = _ref => {\n    let {\n      target: {\n        value,\n        name\n      }\n    } = _ref;\n    if (name === \"month\") {\n      setMonth(value);\n    } else if (name === \"day\") {\n      setDay(value);\n    } else {\n      setType(value);\n    }\n  };\n  const handleClick = () => {\n    const newFinances = finances;\n    newFinances.find(x => x.month === month).expenses.push({\n      date: day.toString(),\n      name,\n      type,\n      value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-finance\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row s-evenly\",\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"Profit\",\n        onClick: () => {\n          setIsProfit(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"Expenses\",\n        onClick: () => {\n          setIsProfit(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        placename: \"name\",\n        callback: _ref2 => {\n          let {\n            target: {\n              value\n            }\n          } = _ref2;\n          return setName(value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"n-input\",\n        placeholder: \"Total value\",\n        onChange: _ref3 => {\n          let {\n            target: {\n              value\n            }\n          } = _ref3;\n          setValue(value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Month\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"month\",\n          className: \"finance-select colunm\",\n          onChange: handleSelect,\n          value: month,\n          children: monthNames.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: x,\n            children: x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Day\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"day\",\n          className: \"finance-select colunm\",\n          onChange: handleSelect,\n          value: day,\n          children: days.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: x,\n            children: x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 30\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Type\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"type\",\n          className: \"finance-select colunm\",\n          onChange: handleSelect,\n          value: type,\n          children: !isProfit ? types.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: x,\n            children: x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)) : typesSalary.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: x,\n            children: x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Add new Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTransaction, \"XIYQaElbG/XeMNT/rto6e7ca6nE=\");\n_c = AddTransaction;\nAddTransaction.propTypes = {};\nAddTransaction.defaultProps = {};\nexport default AddTransaction;\nvar _c;\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"names":["React","useContext","useState","PropTypes","pocketContext","InputText","Checkbox","jsxDEV","_jsxDEV","monthNames","types","typesSalary","days","AddTransaction","_s","isProfit","setIsProfit","name","setName","month","setMonth","type","setType","day","setDay","value","setValue","setFinances","finances","handleSelect","_ref","target","handleClick","newFinances","find","x","expenses","push","date","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placename","callback","_ref2","placeholder","onChange","_ref3","map","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/FinanceComponents/AddTransaction/AddTransaction.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport pocketContext from '../../../context/pocketContext';\nimport InputText from '../../Inputs/InputText/InputText';\nimport Checkbox from '../../Inputs/checkbox/Checkbox';\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst types = ['food', 'delivery', 'rent', 'gym', 'car insurence', 'life insurence', 'cleaning', 'education', \n'light', 'water', 'gas', 'internet', 'Restaurants', 'drug store', 'self care', 'medic', 'dentist', 'car', 'travel', 'present', 'cloats']\n\nconst typesSalary = ['Salary' , 'Investiments', 'Sales', 'Others']\n\nconst days = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\n\nconst AddTransaction = () => {\n  const [isProfit, setIsProfit] = useState(false);\n  const [name, setName] = useState('Transaction');\n  const [month, setMonth] = useState('May');\n  const [type, setType] = useState('food');\n  const [day, setDay] = useState(1);\n  const [value, setValue] = useState(0);\n\n  const {\n    setFinances,\n    finances\n  } = useContext(pocketContext);\n\n  const handleSelect = ({ target: { value, name } }) => {\n    if (name === \"month\") {\n      setMonth(value);\n    } else if ( name === \"day\") {\n      setDay(value);\n    } else {\n      setType(value);\n    }\n  }\n\n  const handleClick = () => {\n    const newFinances = finances;\n    newFinances.find((x) => x.month === month).expenses.push({\n      date: day.toString(),\n      name,\n      type,\n      value,\n    });\n  }\n\n  return(\n    <div className='add-finance'>\n      <p>Add transaction</p>\n      <div className='row s-evenly'>\n        <Checkbox name=\"Profit\" onClick={ () => { setIsProfit(true) } } />\n        <Checkbox name=\"Expenses\" onClick={ () => { setIsProfit(false) } } />\n        <InputText placename=\"name\" callback={ ({ target: { value } }) => setName(value) }/>\n        <input type='number' className='n-input' placeholder='Total value' onChange={({ target: { value } }) => {\n          setValue(value);\n        }}/>\n        <label>\n          Month\n          <select name='month' className='finance-select colunm' onChange={ handleSelect } value={ month }>\n          {\n            monthNames.map((x) => (\n              <option value={x}>{ x }</option>\n            ))\n          }\n          </select>\n        </label>\n        <label>\n          Day\n          <select name='day' className='finance-select colunm' onChange={ handleSelect } value={ day }>\n          {\n            days.map((x) => (<option value={x}>{ x }</option>))\n          }\n          </select>\n        </label>\n        <label>\n          Type\n          <select name='type' className='finance-select colunm' onChange={ handleSelect } value={ type }>\n            {\n              !isProfit ? (\n                types.map((x) => (\n                  <option value={x}>{ x }</option>\n                ))\n              ) : typesSalary.map((x) => (\n                <option value={x}>{ x }</option>\n              ))\n            }\n          </select>\n        </label>\n        <button onClick={ handleClick } >Add new Transaction</button>\n      </div>\n    </div>\n  )\n};\n\nAddTransaction.propTypes = {};\n\nAddTransaction.defaultProps = {};\n\nexport default AddTransaction;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}