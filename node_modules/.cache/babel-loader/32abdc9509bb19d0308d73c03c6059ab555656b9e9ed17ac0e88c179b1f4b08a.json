{"ast":null,"code":"import axios from 'axios';\nconst geonamesUsername = 'humbertocastro';\nconst fetchStatesByCountry = async countryName => {\n  const baseUrl = `http://api.geonames.org/searchJSON?username=${geonamesUsername}&country=${countryName}`;\n  try {\n    const response = await axios.get(`${baseUrl}/searchJSON`);\n\n    // Processar os resultados para extrair os nomes dos estados\n    const states = response.data.geonames.map(state => state.name);\n    console.log(states, response);\n    return states;\n  } catch (error) {\n    console.error('Erro ao buscar estados:', error);\n    return [];\n  }\n};\nexport default fetchStatesByCountry;","map":{"version":3,"names":["axios","geonamesUsername","fetchStatesByCountry","countryName","baseUrl","response","get","states","data","geonames","map","state","name","console","log","error"],"sources":["/home/humberto/all-in-pocket/src/helpers/geonamesReqWithCounty.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst geonamesUsername = 'humbertocastro';\n\nconst fetchStatesByCountry = async (countryName) => {\n  const baseUrl = `http://api.geonames.org/searchJSON?username=${geonamesUsername}&country=${countryName}`;\n  try {\n    const response = await axios.get(`${baseUrl}/searchJSON`);\n\n    // Processar os resultados para extrair os nomes dos estados\n    const states = response.data.geonames.map((state) => state.name);\n    console.log(states, response);\n\n    return states;\n  } catch (error) {\n    console.error('Erro ao buscar estados:', error);\n    return [];\n  }\n};\n\nexport default fetchStatesByCountry;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,gBAAgB,GAAG,gBAAgB;AAEzC,MAAMC,oBAAoB,GAAG,MAAOC,WAAW,IAAK;EAClD,MAAMC,OAAO,GAAI,+CAA8CH,gBAAiB,YAAWE,WAAY,EAAC;EACxG,IAAI;IACF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEF,OAAQ,aAAY,CAAC;;IAEzD;IACA,MAAMG,MAAM,GAAGF,QAAQ,CAACG,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;IAChEC,OAAO,CAACC,GAAG,CAACP,MAAM,EAAEF,QAAQ,CAAC;IAE7B,OAAOE,MAAM;EACf,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,EAAE;EACX;AACF,CAAC;AAED,eAAeb,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}