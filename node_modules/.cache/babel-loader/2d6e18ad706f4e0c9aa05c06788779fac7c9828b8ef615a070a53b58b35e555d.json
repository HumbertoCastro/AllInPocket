{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/HourlyCard/HourlyCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskInformation from '../TaskInformation/TaskInformation';\nimport SetNewTask from '../SetNewTask/SetNewTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HourlyCard = _ref => {\n  _s();\n  let {\n    task\n  } = _ref;\n  const [openInterface, setOpen] = useState(false);\n  const {\n    time,\n    hasTask,\n    id,\n    weak,\n    color,\n    taskId\n  } = task;\n  const duration = task.task.duration ? task.task.duration : 1;\n  const hour = time.slice(0, 2);\n  const minutos = time.slice(3, 5);\n  const renderTask = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row time-card slide-in-fwd-center\",\n    style: hasTask ? {\n      height: duration * 12 + 'vh',\n      backgroundColor: color\n    } : {},\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"row s-btw\",\n      onClick: () => setOpen(true),\n      style: hasTask ? {\n        backgroundColor: color\n      } : {},\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colunm s-center times\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"i-b n-margin\",\n          children: hour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"i-b n-margin\",\n          children: \"..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"i-b n-margin\",\n          children: minutos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), hasTask ? /*#__PURE__*/_jsxDEV(TaskInformation, {\n        task: task,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-inf add-task\",\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: openInterface ? /*#__PURE__*/_jsxDEV(SetNewTask, {\n      id: {\n        id,\n        taskId\n      },\n      weak: weak,\n      openInterface: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this) : renderTask()\n  }, void 0, false);\n};\n_s(HourlyCard, \"lp0JSL8ZIcPQIOyqH9xGGJhS1+U=\");\n_c = HourlyCard;\nHourlyCard.propTypes = {};\nHourlyCard.defaultProps = {};\nexport default HourlyCard;\nvar _c;\n$RefreshReg$(_c, \"HourlyCard\");","map":{"version":3,"names":["React","useState","TaskInformation","SetNewTask","jsxDEV","_jsxDEV","Fragment","_Fragment","HourlyCard","_ref","_s","task","openInterface","setOpen","time","hasTask","id","weak","color","taskId","duration","hour","slice","minutos","renderTask","className","style","height","backgroundColor","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/HourlyCard/HourlyCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskInformation from '../TaskInformation/TaskInformation';\nimport SetNewTask from '../SetNewTask/SetNewTask';\n\n\nconst HourlyCard = ({ task }) => {\n  const [openInterface, setOpen] = useState(false);\n  const { time, hasTask, id, weak, color, taskId } = task;\n  const duration = task.task.duration ? task.task.duration : 1;\n  const hour = time.slice(0, 2);\n  const minutos = time.slice(3, 5);\n\n  const renderTask = () => (\n    <div className=\"row time-card slide-in-fwd-center\" style={ hasTask ? \n      { \n        height: duration * 12 + 'vh',\n        backgroundColor: color,\n      } : {} }>\n      <button className='row s-btw' onClick={ () => setOpen(true) } style={ hasTask ? \n        {\n          backgroundColor: color,\n        } : {} }>\n        <div className=\"colunm s-center times\">\n          <p className='i-b n-margin'>\n            {\n              hour\n            }\n          </p>\n          <p className='i-b n-margin'>\n            ..\n          </p>\n          <p className='i-b n-margin'>\n            {\n              minutos\n            }\n          </p>\n        </div>\n        {\n          hasTask ? <TaskInformation task={ task } id={id} /> : <p className='task-inf add-task'>Add task</p>\n        }\n      </button>\n    </div>\n  )\n\n\n  return (\n    <>\n      {\n        openInterface ? <SetNewTask id={ { id, taskId } } weak={ weak } openInterface={ setOpen } /> : renderTask()\n      }\n    </>\n  )\n};\n\nHourlyCard.propTypes = {};\n\nHourlyCard.defaultProps = {};\n\nexport default HourlyCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}