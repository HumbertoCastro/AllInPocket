{"ast":null,"code":"import _slicedToArray from\"/home/humberto/all-in-pocket/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useContext,useState}from'react';import'../finance.css';import OverViewFinance from'../OverViewFinance/OverViewFinance';import MonthExpenses from'../MonthExpenses/MonthExpenses';import pocketContext from'../../../context/pocketContext';import MonthProfit from'../MonthProfit/MonthProfit';import AddTransaction from'../AddTransaction/AddTransaction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var monthNames=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var Finance=function Finance(){var date=new Date();var month=monthNames[date.getMonth()];var _useContext=useContext(pocketContext),finances=_useContext.finances,setFinances=_useContext.setFinances;var _useState=useState('expenses'),_useState2=_slicedToArray(_useState,2),atualDisplay=_useState2[0],setActualDisplay=_useState2[1];var _useState3=useState(month),_useState4=_slicedToArray(_useState3,2),useMonth=_useState4[0],setUseMonth=_useState4[1];var callbackChangeFinances=function callbackChangeFinances(newFinances,display){setUseFinances(newFinances);if(!display){if(atualDisplay==='expenses'){setDisplay(/*#__PURE__*/_jsx(MonthExpenses,{finances:useFinances,month:useMonth,callback:callbackChangeFinances}));}else if(atualDisplay==='profit'){setDisplay(/*#__PURE__*/_jsx(MonthProfit,{finances:useFinances,month:useMonth,callback:callbackChangeFinances}));}}else{if(display==='expenses'){setDisplay(/*#__PURE__*/_jsx(MonthExpenses,{finances:useFinances,month:useMonth,callback:callbackChangeFinances}));}else if(display==='profit'){setDisplay(/*#__PURE__*/_jsx(MonthProfit,{finances:useFinances,month:useMonth,callback:callbackChangeFinances}));}}};var _useState5=useState(/*#__PURE__*/_jsx(MonthExpenses,{finances:finances,month:useMonth,callback:callbackChangeFinances})),_useState6=_slicedToArray(_useState5,2),display=_useState6[0],setDisplay=_useState6[1];var _useState7=useState(finances),_useState8=_slicedToArray(_useState7,2),useFinances=_useState8[0],setUseFinances=_useState8[1];var handleSelect=function handleSelect(_ref){var value=_ref.target.value;setUseMonth(value);if(atualDisplay==='expenses'){setDisplay(/*#__PURE__*/_jsx(MonthExpenses,{finances:useFinances,month:value,callback:callbackChangeFinances}));}else if(atualDisplay==='profit'){setDisplay(/*#__PURE__*/_jsx(MonthProfit,{finances:useFinances,month:value,callback:callbackChangeFinances}));}};var handleSelectTransactions=function handleSelectTransactions(_ref2){var value=_ref2.target.value;setActualDisplay(value);if(value==='expenses'){setDisplay(/*#__PURE__*/_jsx(MonthExpenses,{finances:useFinances,month:useMonth,callback:callbackChangeFinances}));}else if(value==='profit'){setDisplay(/*#__PURE__*/_jsx(MonthProfit,{finances:useFinances,month:useMonth,callback:callbackChangeFinances}));}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"select\",{className:\"finance-select colunm\",onChange:handleSelect,value:useMonth,children:monthNames.map(function(x){return/*#__PURE__*/_jsx(\"option\",{value:x,children:x});})}),/*#__PURE__*/_jsx(OverViewFinance,{finances:useFinances,month:useMonth}),/*#__PURE__*/_jsx(AddTransaction,{callback:callbackChangeFinances,useMonth:useMonth}),/*#__PURE__*/_jsxs(\"p\",{className:\"select-p row\",children:[\"This month \",/*#__PURE__*/_jsxs(\"select\",{className:\"colunm\",onChange:handleSelectTransactions,children:[/*#__PURE__*/_jsx(\"option\",{children:\" expenses \"}),/*#__PURE__*/_jsx(\"option\",{children:\" profit \"})]})]}),display]});};Finance.defaultProps={};export default Finance;","map":{"version":3,"names":["React","useContext","useState","OverViewFinance","MonthExpenses","pocketContext","MonthProfit","AddTransaction","jsx","_jsx","jsxs","_jsxs","monthNames","Finance","date","Date","month","getMonth","_useContext","finances","setFinances","_useState","_useState2","_slicedToArray","atualDisplay","setActualDisplay","_useState3","_useState4","useMonth","setUseMonth","callbackChangeFinances","newFinances","display","setUseFinances","setDisplay","useFinances","callback","_useState5","_useState6","_useState7","_useState8","handleSelect","_ref","value","target","handleSelectTransactions","_ref2","children","className","onChange","map","x","defaultProps"],"sources":["/home/humberto/all-in-pocket/src/components/FinanceComponents/Finance/Finance.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../finance.css'\nimport OverViewFinance from '../OverViewFinance/OverViewFinance';\nimport MonthExpenses from '../MonthExpenses/MonthExpenses';\nimport pocketContext from '../../../context/pocketContext';\nimport MonthProfit from '../MonthProfit/MonthProfit';\nimport AddTransaction from '../AddTransaction/AddTransaction';\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\n\nconst Finance = () => {\n  const date = new Date();\n  let month = monthNames[date.getMonth()];\n\n  const {\n    finances,\n    setFinances,\n  } = useContext(pocketContext);\n\n  const [atualDisplay, setActualDisplay] = useState('expenses')\n  const [useMonth, setUseMonth] = useState(month);\n\n  const callbackChangeFinances = (newFinances, display) => {\n    setUseFinances(newFinances);\n    if (!display) {\n      if (atualDisplay === 'expenses') {\n        setDisplay(<MonthExpenses finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      } else if (atualDisplay === 'profit') {\n        setDisplay(<MonthProfit finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      }\n    } else {\n      if (display === 'expenses') {\n        setDisplay(<MonthExpenses finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      } else if (display === 'profit') {\n        setDisplay(<MonthProfit finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n      }\n    }\n  }\n\n  const [display, setDisplay] = useState(<MonthExpenses finances={ finances } month={ useMonth } callback={ callbackChangeFinances } />);\n  const [useFinances, setUseFinances] = useState(finances);\n\n  const handleSelect = ({ target: { value } }) => {\n    setUseMonth(value)\n    if (atualDisplay === 'expenses') {\n      setDisplay(<MonthExpenses finances={ useFinances } month={ value } callback={ callbackChangeFinances } />)\n    } else if (atualDisplay === 'profit') {\n      setDisplay(<MonthProfit finances={ useFinances } month={ value } callback={ callbackChangeFinances } />)\n    }\n  }\n\n  const handleSelectTransactions = ({ target: { value }}) => {\n    setActualDisplay(value);\n    if (value === 'expenses') {\n      setDisplay(<MonthExpenses finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n    } else if (value === 'profit') {\n      setDisplay(<MonthProfit finances={ useFinances } month={ useMonth } callback={ callbackChangeFinances } />)\n    } \n  }\n\n  return (\n    <div>\n      <select className='finance-select colunm' onChange={ handleSelect } value={ useMonth }>\n        {\n          monthNames.map((x) => (\n            <option value={x}>{ x }</option>\n          ))\n        }\n      </select>\n      <OverViewFinance finances={ useFinances } month={ useMonth }/>\n      <AddTransaction callback={ callbackChangeFinances } useMonth={ useMonth } />\n      <p className='select-p row'>This month <select className='colunm' onChange={ handleSelectTransactions }>\n        <option> expenses </option>\n        <option> profit </option>\n      </select></p>\n      {\n        display\n      }\n    </div>\n  )\n};\n\nFinance.propTypes = {};\n\nFinance.defaultProps = {};\n\nexport default Finance;\n"],"mappings":"kHAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAEnD,MAAO,gBAAgB,CACvB,MAAO,CAAAC,eAAe,KAAM,oCAAoC,CAChE,MAAO,CAAAC,aAAa,KAAM,gCAAgC,CAC1D,MAAO,CAAAC,aAAa,KAAM,gCAAgC,CAC1D,MAAO,CAAAC,WAAW,KAAM,4BAA4B,CACpD,MAAO,CAAAC,cAAc,KAAM,kCAAkC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9D,GAAM,CAAAC,UAAU,CAAG,CAAC,SAAS,CAAE,UAAU,CAAE,OAAO,CAAE,OAAO,CAAE,KAAK,CAAE,MAAM,CACxE,MAAM,CAAE,QAAQ,CAAE,WAAW,CAAE,SAAS,CAAE,UAAU,CAAE,UAAU,CACjE,CAGD,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CACpB,GAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACvB,GAAI,CAAAC,KAAK,CAAGJ,UAAU,CAACE,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAC,CAEvC,IAAAC,WAAA,CAGIjB,UAAU,CAACI,aAAa,CAAC,CAF3Bc,QAAQ,CAAAD,WAAA,CAARC,QAAQ,CACRC,WAAW,CAAAF,WAAA,CAAXE,WAAW,CAGb,IAAAC,SAAA,CAAyCnB,QAAQ,CAAC,UAAU,CAAC,CAAAoB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAtDG,YAAY,CAAAF,UAAA,IAAEG,gBAAgB,CAAAH,UAAA,IACrC,IAAAI,UAAA,CAAgCxB,QAAQ,CAACc,KAAK,CAAC,CAAAW,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAxCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAE5B,GAAM,CAAAG,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAIC,WAAW,CAAEC,OAAO,CAAK,CACvDC,cAAc,CAACF,WAAW,CAAC,CAC3B,GAAI,CAACC,OAAO,CAAE,CACZ,GAAIR,YAAY,GAAK,UAAU,CAAE,CAC/BU,UAAU,cAACzB,IAAA,CAACL,aAAa,EAACe,QAAQ,CAAGgB,WAAa,CAACnB,KAAK,CAAGY,QAAU,CAACQ,QAAQ,CAAGN,sBAAwB,CAAE,CAAC,CAAC,CAC/G,CAAC,IAAM,IAAIN,YAAY,GAAK,QAAQ,CAAE,CACpCU,UAAU,cAACzB,IAAA,CAACH,WAAW,EAACa,QAAQ,CAAGgB,WAAa,CAACnB,KAAK,CAAGY,QAAU,CAACQ,QAAQ,CAAGN,sBAAwB,CAAE,CAAC,CAAC,CAC7G,CACF,CAAC,IAAM,CACL,GAAIE,OAAO,GAAK,UAAU,CAAE,CAC1BE,UAAU,cAACzB,IAAA,CAACL,aAAa,EAACe,QAAQ,CAAGgB,WAAa,CAACnB,KAAK,CAAGY,QAAU,CAACQ,QAAQ,CAAGN,sBAAwB,CAAE,CAAC,CAAC,CAC/G,CAAC,IAAM,IAAIE,OAAO,GAAK,QAAQ,CAAE,CAC/BE,UAAU,cAACzB,IAAA,CAACH,WAAW,EAACa,QAAQ,CAAGgB,WAAa,CAACnB,KAAK,CAAGY,QAAU,CAACQ,QAAQ,CAAGN,sBAAwB,CAAE,CAAC,CAAC,CAC7G,CACF,CACF,CAAC,CAED,IAAAO,UAAA,CAA8BnC,QAAQ,cAACO,IAAA,CAACL,aAAa,EAACe,QAAQ,CAAGA,QAAU,CAACH,KAAK,CAAGY,QAAU,CAACQ,QAAQ,CAAGN,sBAAwB,CAAE,CAAC,CAAC,CAAAQ,UAAA,CAAAf,cAAA,CAAAc,UAAA,IAA/HL,OAAO,CAAAM,UAAA,IAAEJ,UAAU,CAAAI,UAAA,IAC1B,IAAAC,UAAA,CAAsCrC,QAAQ,CAACiB,QAAQ,CAAC,CAAAqB,UAAA,CAAAjB,cAAA,CAAAgB,UAAA,IAAjDJ,WAAW,CAAAK,UAAA,IAAEP,cAAc,CAAAO,UAAA,IAElC,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAAC,IAAA,CAA8B,IAAd,CAAAC,KAAK,CAAAD,IAAA,CAAfE,MAAM,CAAID,KAAK,CACrCd,WAAW,CAACc,KAAK,CAAC,CAClB,GAAInB,YAAY,GAAK,UAAU,CAAE,CAC/BU,UAAU,cAACzB,IAAA,CAACL,aAAa,EAACe,QAAQ,CAAGgB,WAAa,CAACnB,KAAK,CAAG2B,KAAO,CAACP,QAAQ,CAAGN,sBAAwB,CAAE,CAAC,CAAC,CAC5G,CAAC,IAAM,IAAIN,YAAY,GAAK,QAAQ,CAAE,CACpCU,UAAU,cAACzB,IAAA,CAACH,WAAW,EAACa,QAAQ,CAAGgB,WAAa,CAACnB,KAAK,CAAG2B,KAAO,CAACP,QAAQ,CAAGN,sBAAwB,CAAE,CAAC,CAAC,CAC1G,CACF,CAAC,CAED,GAAM,CAAAe,wBAAwB,CAAG,QAA3B,CAAAA,wBAAwBA,CAAAC,KAAA,CAA6B,IAAb,CAAAH,KAAK,CAAAG,KAAA,CAAfF,MAAM,CAAID,KAAK,CACjDlB,gBAAgB,CAACkB,KAAK,CAAC,CACvB,GAAIA,KAAK,GAAK,UAAU,CAAE,CACxBT,UAAU,cAACzB,IAAA,CAACL,aAAa,EAACe,QAAQ,CAAGgB,WAAa,CAACnB,KAAK,CAAGY,QAAU,CAACQ,QAAQ,CAAGN,sBAAwB,CAAE,CAAC,CAAC,CAC/G,CAAC,IAAM,IAAIa,KAAK,GAAK,QAAQ,CAAE,CAC7BT,UAAU,cAACzB,IAAA,CAACH,WAAW,EAACa,QAAQ,CAAGgB,WAAa,CAACnB,KAAK,CAAGY,QAAU,CAACQ,QAAQ,CAAGN,sBAAwB,CAAE,CAAC,CAAC,CAC7G,CACF,CAAC,CAED,mBACEnB,KAAA,QAAAoC,QAAA,eACEtC,IAAA,WAAQuC,SAAS,CAAC,uBAAuB,CAACC,QAAQ,CAAGR,YAAc,CAACE,KAAK,CAAGf,QAAU,CAAAmB,QAAA,CAElFnC,UAAU,CAACsC,GAAG,CAAC,SAACC,CAAC,qBACf1C,IAAA,WAAQkC,KAAK,CAAEQ,CAAE,CAAAJ,QAAA,CAAGI,CAAC,CAAU,CAAC,EACjC,CAAC,CAEE,CAAC,cACT1C,IAAA,CAACN,eAAe,EAACgB,QAAQ,CAAGgB,WAAa,CAACnB,KAAK,CAAGY,QAAU,CAAC,CAAC,cAC9DnB,IAAA,CAACF,cAAc,EAAC6B,QAAQ,CAAGN,sBAAwB,CAACF,QAAQ,CAAGA,QAAU,CAAE,CAAC,cAC5EjB,KAAA,MAAGqC,SAAS,CAAC,cAAc,CAAAD,QAAA,EAAC,aAAW,cAAApC,KAAA,WAAQqC,SAAS,CAAC,QAAQ,CAACC,QAAQ,CAAGJ,wBAA0B,CAAAE,QAAA,eACrGtC,IAAA,WAAAsC,QAAA,CAAQ,YAAU,CAAQ,CAAC,cAC3BtC,IAAA,WAAAsC,QAAA,CAAQ,UAAQ,CAAQ,CAAC,EACnB,CAAC,EAAG,CAAC,CAEXf,OAAO,EAEN,CAAC,CAEV,CAAC,CAIDnB,OAAO,CAACuC,YAAY,CAAG,CAAC,CAAC,CAEzB,cAAe,CAAAvC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}