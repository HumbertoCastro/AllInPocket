{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/TaskListComponents/NewNote/NewNote.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport svgs from '../../../helpers/svg';\nimport InputText from '../../Inputs/InputText/InputText';\nimport ColorsSelect from '../../Inputs/ColorsSelect/ColorsSelect';\nimport pocketContext from '../../../context/pocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewNote = _ref => {\n  _s();\n  let {\n    setNewNote,\n    setNote,\n    notes\n  } = _ref;\n  const [title, setTitle] = useState('New Note');\n  const [color, setColor] = useState('#C212D6');\n  const {\n    theme\n  } = useContext(pocketContext);\n  const handleChange = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    return setTitle(value);\n  };\n  const handleClick = () => {\n    const noteObject = {\n      title,\n      color,\n      id: notes.length + 1,\n      content: ''\n    };\n    console.log(noteObject);\n    setNote([...notes, noteObject]);\n    localStorage.setItem('notes', JSON.stringify([...notes, noteObject]));\n    setNewNote(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-note colunm s-btw\",\n    style: {\n      backgroundColor: theme.primaryColor,\n      color: theme.textColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setNewNote(false);\n      },\n      style: {\n        backgroundColor: theme.primaryColor,\n        color: theme.textColor\n      },\n      children: svgs.exit()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      name: \"title\",\n      callback: handleChange,\n      placename: \"Task Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"colunm s-evenly\",\n      children: [\"Choose the color for the task\", /*#__PURE__*/_jsxDEV(ColorsSelect, {\n        selectedColor: color,\n        callback: setColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"string-btn\",\n      style: {\n        backgroundColor: theme.primaryColor,\n        color: theme.textColor\n      },\n      children: [\"Add new Note \", svgs.plusNote()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(NewNote, \"4IgkxOqHpl5NBoXk5rhKMthP+xg=\");\n_c = NewNote;\nNewNote.propTypes = {};\nNewNote.defaultProps = {};\nexport default NewNote;\nvar _c;\n$RefreshReg$(_c, \"NewNote\");","map":{"version":3,"names":["React","useCallback","useContext","useState","PropTypes","svgs","InputText","ColorsSelect","pocketContext","jsxDEV","_jsxDEV","NewNote","_ref","_s","setNewNote","setNote","notes","title","setTitle","color","setColor","theme","handleChange","_ref2","target","value","handleClick","noteObject","id","length","content","console","log","localStorage","setItem","JSON","stringify","className","style","backgroundColor","primaryColor","textColor","children","onClick","exit","fileName","_jsxFileName","lineNumber","columnNumber","name","callback","placename","selectedColor","plusNote","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/TaskListComponents/NewNote/NewNote.js"],"sourcesContent":["import React, { useCallback, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport svgs from '../../../helpers/svg';\nimport InputText from '../../Inputs/InputText/InputText';\nimport ColorsSelect from '../../Inputs/ColorsSelect/ColorsSelect';\nimport pocketContext from '../../../context/pocketContext';\n\n\nconst NewNote = ({ setNewNote, setNote, notes }) => {\n  const [title, setTitle] = useState('New Note');\n  const [color, setColor] = useState('#C212D6');\n\n  const {\n    theme,\n  } = useContext(pocketContext);\n\n  const handleChange = ({ target: { value } }) => setTitle(value);\n\n  const handleClick = () => {\n    const noteObject = {\n      title,\n      color,\n      id: notes.length + 1,\n      content: '',\n    }\n    console.log(noteObject);\n    setNote([...notes, noteObject])\n    localStorage.setItem('notes', JSON.stringify([...notes, noteObject]));\n    setNewNote(false);\n  }\n\n  return(\n    <div className='new-note colunm s-btw' style={ { backgroundColor: theme.primaryColor, color: theme.textColor }}>\n      <button onClick={ () => { setNewNote(false) }} style={ { backgroundColor: theme.primaryColor, color: theme.textColor }}>\n        {\n          svgs.exit()\n        }\n      </button>\n      <InputText name=\"title\" callback={ handleChange } placename=\"Task Title\" />\n      <label className='colunm s-evenly'>Choose the color for the task\n       <ColorsSelect selectedColor={ color } callback={ setColor }/>\n      </label>\n      <button onClick={ handleClick } className='string-btn' style={ { backgroundColor: theme.primaryColor, color: theme.textColor }}>\n        Add new Note {\n          svgs.plusNote()\n        }\n      </button>\n    </div>\n  )\n};\n\nNewNote.propTypes = {};\n\nNewNote.defaultProps = {};\n\nexport default NewNote;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}