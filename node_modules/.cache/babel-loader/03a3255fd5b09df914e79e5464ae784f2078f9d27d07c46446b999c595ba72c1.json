{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/FinanceComponents/MonthExpenses/MonthExpenses.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionCard from '../TransactionCard/TransactionCard';\nimport pocketContext from '../../../context/pocketContext';\nimport InputText from '../../Inputs/InputText/InputText';\nimport svgs from '../../../helpers/svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthExpenses = _ref => {\n  _s();\n  let {\n    month\n  } = _ref;\n  const [name, setName] = useState('');\n  const [newTypes, setNewTypes] = useState([]);\n  const {\n    exTypes,\n    setExtypes,\n    setFinances,\n    finances\n  } = useContext(pocketContext);\n  useEffect(() => {\n    setNewTypes(exTypes.map(tipo => {\n      return {\n        [tipo]: [...finances.filter(x => x.month === month)[0].expenses.filter(x => x.type === tipo)].sort((a, b) => {\n          return b.date - a.date;\n        })\n      };\n    }));\n  }, [setFinances]);\n  const handleChange = _ref2 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref2;\n    if (value.length > 0) {\n      setName(value);\n    }\n  };\n  const handleClick = () => {\n    if (name.length > 0) {\n      setExtypes([...exTypes, name]);\n      setName('');\n      localStorage.setItem('exTypes', JSON.stringify([...exTypes, name]));\n    }\n  };\n  const callback = newFinances => {\n    setFinances(newFinances);\n  };\n  console.log(finances, newTypes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"month-expenses\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This Month Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(InputText, {\n        placename: \"set new category\",\n        callback: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: svgs.plus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), newTypes.map(x => {\n      return /*#__PURE__*/_jsxDEV(TransactionCard, {\n        array: x,\n        color: \"red\",\n        callback: callback,\n        finances: finances,\n        month: month,\n        isProfit: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthExpenses, \"iKDBYxK1mcTgb8b7UEkiz6FmRcI=\");\n_c = MonthExpenses;\nMonthExpenses.propTypes = {};\nMonthExpenses.defaultProps = {};\nexport default MonthExpenses;\nvar _c;\n$RefreshReg$(_c, \"MonthExpenses\");","map":{"version":3,"names":["React","useContext","useEffect","useState","PropTypes","TransactionCard","pocketContext","InputText","svgs","jsxDEV","_jsxDEV","MonthExpenses","_ref","_s","month","name","setName","newTypes","setNewTypes","exTypes","setExtypes","setFinances","finances","map","tipo","filter","x","expenses","type","sort","a","b","date","handleChange","_ref2","target","value","length","handleClick","localStorage","setItem","JSON","stringify","callback","newFinances","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placename","onClick","plus","array","color","isProfit","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/FinanceComponents/MonthExpenses/MonthExpenses.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionCard from '../TransactionCard/TransactionCard';\nimport pocketContext from '../../../context/pocketContext';\nimport InputText from '../../Inputs/InputText/InputText';\nimport svgs from '../../../helpers/svg';\n\nconst MonthExpenses = ({ month }) => {\n  const [name, setName] = useState('');\n  const [newTypes, setNewTypes] = useState([]);\n  const {\n    exTypes,\n    setExtypes,\n    setFinances,\n    finances\n  } = useContext(pocketContext);\n\n  useEffect(() => {\n    setNewTypes(exTypes.map((tipo) => {\n      return {\n        [tipo]: [...finances.filter((x) => x.month === month)[0].expenses.filter((x) => x.type === tipo)].sort((a, b) => {\n          return b.date - a.date\n        }),\n      }\n    }))\n  }, [setFinances])\n\n  const handleChange = ({ target: { value } }) => {\n    if (value.length > 0 ) {\n      setName(value);\n    }\n  }\n\n  const handleClick = () => {\n    if (name.length > 0) {\n      setExtypes([...exTypes, name]);\n      setName('');\n      localStorage.setItem('exTypes', JSON.stringify([...exTypes, name]));\n    }\n  }\n\n  const callback = (newFinances) => {\n    setFinances(newFinances)\n  }\n\n  console.log(finances, newTypes);\n\n  return (\n    <div className='month-expenses'>\n      <p>This Month Expenses</p>\n      <div className='row'>\n        <InputText placename=\"set new category\" callback={ handleChange }/>\n        <button onClick={ handleClick }>{ svgs.plus() }</button>\n      </div>\n      {\n        newTypes.map((x) => {\n          return (\n            <TransactionCard  array={ x } color=\"red\" callback={ callback } finances={ finances } month={ month } isProfit={false}/>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nMonthExpenses.propTypes = {};\n\nMonthExpenses.defaultProps = {};\n\nexport default MonthExpenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IACJgB,OAAO;IACPC,UAAU;IACVC,WAAW;IACXC;EACF,CAAC,GAAGrB,UAAU,CAACK,aAAa,CAAC;EAE7BJ,SAAS,CAAC,MAAM;IACdgB,WAAW,CAACC,OAAO,CAACI,GAAG,CAAEC,IAAI,IAAK;MAChC,OAAO;QACL,CAACA,IAAI,GAAG,CAAC,GAAGF,QAAQ,CAACG,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACZ,KAAK,KAAKA,KAAK,CAAC,CAAC,CAAC,CAAC,CAACa,QAAQ,CAACF,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACE,IAAI,KAAKJ,IAAI,CAAC,CAAC,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC/G,OAAOA,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI;QACxB,CAAC;MACH,CAAC;IACH,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACX,WAAW,CAAC,CAAC;EAEjB,MAAMY,YAAY,GAAGC,KAAA,IAA2B;IAAA,IAA1B;MAAEC,MAAM,EAAE;QAAEC;MAAM;IAAE,CAAC,GAAAF,KAAA;IACzC,IAAIE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAG;MACrBrB,OAAO,CAACoB,KAAK,CAAC;IAChB;EACF,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIvB,IAAI,CAACsB,MAAM,GAAG,CAAC,EAAE;MACnBjB,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEJ,IAAI,CAAC,CAAC;MAC9BC,OAAO,CAAC,EAAE,CAAC;MACXuB,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,GAAGvB,OAAO,EAAEJ,IAAI,CAAC,CAAC,CAAC;IACrE;EACF,CAAC;EAED,MAAM4B,QAAQ,GAAIC,WAAW,IAAK;IAChCvB,WAAW,CAACuB,WAAW,CAAC;EAC1B,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACxB,QAAQ,EAAEL,QAAQ,CAAC;EAE/B,oBACEP,OAAA;IAAKqC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BtC,OAAA;MAAAsC,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1B1C,OAAA;MAAKqC,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBtC,OAAA,CAACH,SAAS;QAAC8C,SAAS,EAAC,kBAAkB;QAACV,QAAQ,EAAGV;MAAc;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnE1C,OAAA;QAAQ4C,OAAO,EAAGhB,WAAa;QAAAU,QAAA,EAAGxC,IAAI,CAAC+C,IAAI,CAAC;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,EAEJnC,QAAQ,CAACM,GAAG,CAAEG,CAAC,IAAK;MAClB,oBACEhB,OAAA,CAACL,eAAe;QAAEmD,KAAK,EAAG9B,CAAG;QAAC+B,KAAK,EAAC,KAAK;QAACd,QAAQ,EAAGA,QAAU;QAACrB,QAAQ,EAAGA,QAAU;QAACR,KAAK,EAAGA,KAAO;QAAC4C,QAAQ,EAAE;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAE5H,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV,CAAC;AAAAvC,EAAA,CAxDKF,aAAa;AAAAgD,EAAA,GAAbhD,aAAa;AA0DnBA,aAAa,CAACiD,SAAS,GAAG,CAAC,CAAC;AAE5BjD,aAAa,CAACkD,YAAY,GAAG,CAAC,CAAC;AAE/B,eAAelD,aAAa;AAAC,IAAAgD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}