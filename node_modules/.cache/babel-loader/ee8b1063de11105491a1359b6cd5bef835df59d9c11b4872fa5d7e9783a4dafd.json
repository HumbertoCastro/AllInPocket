{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/Daily/Daily.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport HourlyCard from '../HourlyCard/HourlyCard';\nimport pocketContext from '../../../context/pocketContext';\nimport SetNewTask from '../SetNewTask/SetNewTask';\nimport '../weekly.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\nconst Daily = () => {\n  _s();\n  const [taskId, setTaskId] = useState(0);\n  const [taskWeak, setTaskWeak] = useState(\"\");\n  const [selected, setSelected] = useState(\"Sun\");\n  const [onlyTasks, setOnly] = useState(false);\n  const [taskDisplay, setTaskDisplay] = useState();\n  const {\n    tasks,\n    setTasks,\n    openInterface,\n    interfaceNewTask\n  } = useContext(pocketContext);\n  const addTask = (id, weak) => {\n    setTaskId(id);\n    setTaskWeak(weak);\n    openInterface(true);\n  };\n  const handleClick = _ref => {\n    let {\n      target: {\n        name\n      }\n    } = _ref;\n    setSelected(name);\n    setTaskDisplay(renderTheTasks());\n  };\n  useEffect(() => {\n    setTaskDisplay(renderTheTasks());\n  }, []);\n  const handleDelete = id => {\n    const filtered = tasks;\n    filtered.forEach(_ref2 => {\n      let {\n        cardArray\n      } = _ref2;\n      return cardArray.forEach(x => {\n        if (x.id === id) {\n          x.hasTask = false;\n          x.taskId = 0;\n        }\n        return x;\n      });\n    });\n    setTasks(filtered);\n    // setTaskDisplay(renderTheTasks());\n  };\n\n  const renderTheTasks = () => {\n    const tasksToRender = onlyTasks ? tasks.filter(_ref3 => {\n      let {\n        weak\n      } = _ref3;\n      return weak === selected;\n    })[0].cardArray.filter(x => !x.overlap && x.hasTask).map(task => /*#__PURE__*/_jsxDEV(HourlyCard, {\n      deleteCallback: handleDelete,\n      callback: addTask,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }, this)) : tasks.filter(_ref4 => {\n      let {\n        weak\n      } = _ref4;\n      return weak === selected;\n    })[0].cardArray.filter(x => !x.overlap).map(task => /*#__PURE__*/_jsxDEV(HourlyCard, {\n      deleteCallback: handleDelete,\n      callback: addTask,\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }, this));\n    if (tasksToRender.length > 0) {\n      return tasksToRender;\n    }\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"no-task\",\n      children: \"No tasks to be displayed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this);\n  };\n  console.log('rendereizo');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"colunm s-evenly\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row s-evenly\",\n      children: weekday.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n        name: day,\n        className: selected === day ? \"selected s-scale\" : null,\n        onClick: handleClick,\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"cyberpunk-checkbox-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"cyberpunk-checkbox\",\n        type: \"checkbox\",\n        onClick: _ref5 => {\n          let {\n            target\n          } = _ref5;\n          setOnly(!onlyTasks);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), \"Show only tasks\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), taskDisplay, interfaceNewTask ? /*#__PURE__*/_jsxDEV(SetNewTask, {\n      id: taskId,\n      weak: taskWeak\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 28\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Daily, \"9dGD7RYU3ykiA2ttQHawAuCVcBY=\");\n_c = Daily;\nDaily.propTypes = {};\nDaily.defaultProps = {};\nexport default Daily;\nvar _c;\n$RefreshReg$(_c, \"Daily\");","map":{"version":3,"names":["React","useContext","useEffect","useState","PropTypes","HourlyCard","pocketContext","SetNewTask","jsxDEV","_jsxDEV","weekday","Daily","_s","taskId","setTaskId","taskWeak","setTaskWeak","selected","setSelected","onlyTasks","setOnly","taskDisplay","setTaskDisplay","tasks","setTasks","openInterface","interfaceNewTask","addTask","id","weak","handleClick","_ref","target","name","renderTheTasks","handleDelete","filtered","forEach","_ref2","cardArray","x","hasTask","tasksToRender","filter","_ref3","overlap","map","task","deleteCallback","callback","fileName","_jsxFileName","lineNumber","columnNumber","_ref4","length","className","children","console","log","day","onClick","class","type","_ref5","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/WeeklyPlanerComponents/Daily/Daily.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport HourlyCard from '../HourlyCard/HourlyCard';\nimport pocketContext from '../../../context/pocketContext';\nimport SetNewTask from '../SetNewTask/SetNewTask';\nimport '../weekly.css'\n\nconst weekday = [\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thur\",\"Fri\",\"Sat\"];\n\n\nconst Daily = () => {\n  const [taskId, setTaskId] = useState(0);\n  const [taskWeak, setTaskWeak] = useState(\"\");\n  const [selected, setSelected] = useState(\"Sun\");\n  const [onlyTasks, setOnly] = useState(false);\n  const [taskDisplay, setTaskDisplay] = useState();\n\n  const {\n    tasks,\n    setTasks,\n    openInterface,\n    interfaceNewTask,\n  } = useContext(pocketContext);\n\n  const addTask = (id, weak) => {\n    setTaskId(id);\n    setTaskWeak(weak);\n    openInterface(true);\n  }\n\n  const handleClick = ({ target: { name } }) => {\n    setSelected(name);\n    setTaskDisplay(renderTheTasks());\n  }\n\n  useEffect(() => {\n    setTaskDisplay(renderTheTasks());\n  }, [])\n\n  const handleDelete = (id) => {\n    const filtered = tasks;\n    filtered.forEach(({ cardArray }) => cardArray.forEach((x) => {\n      if (x.id === id) {\n        x.hasTask = false;\n        x.taskId = 0;\n      }\n      return x;\n    }));\n    setTasks(filtered);\n    // setTaskDisplay(renderTheTasks());\n  }\n\n  const renderTheTasks = () => {\n    const tasksToRender = onlyTasks ? tasks.filter(({ weak }) => weak === selected)[0].cardArray.filter((x) => !(x.overlap) && x.hasTask).map((task) => \n    (<HourlyCard deleteCallback={ handleDelete } callback={ addTask } task={ task } />)) :\n    tasks.filter(({ weak }) => weak === selected)[0].cardArray.filter((x) => !(x.overlap)).map((task) => \n    (<HourlyCard deleteCallback={ handleDelete } callback={ addTask } task={ task } />));\n    if (tasksToRender.length > 0) {\n      return tasksToRender;\n    } return (<h1 className='no-task'>No tasks to be displayed</h1>)\n  }\n  \n  console.log('rendereizo');\n\n  return(\n    <div className=\"colunm s-evenly\">\n      <div className='row s-evenly'>\n        {\n          weekday.map((day) => (\n            <button\n              name={ day }\n              className={ selected === day ? \"selected s-scale\" : null }\n              onClick={ handleClick }\n            >\n              {\n                day\n              }\n            </button>\n          ))\n        }\n      </div>\n      <label class=\"cyberpunk-checkbox-label\">\n      <input class=\"cyberpunk-checkbox\" type=\"checkbox\" onClick={ ({ target }) => {\n        setOnly(!onlyTasks);\n      } }/>Show only tasks</label>\n      {\n        taskDisplay\n      }\n      {\n        interfaceNewTask ? <SetNewTask id={ taskId } weak={ taskWeak } /> : null\n      }\n    </div>\n  )\n};\n\nDaily.propTypes = {};\n\nDaily.defaultProps = {};\n\nexport default Daily;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}