{"ast":null,"code":"var _jsxFileName = \"/home/humberto/all-in-pocket/src/components/WeatherComponents/Weather/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport WeatherForm from '../WeatherForm/WeatherForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const fetchData = async () => {\n    const apiKey = process.env.REACT_APP_WEATHER_API_KEY; // Substitua pela sua própria chave de API\n    const location = 'London'; // Substitua pela localização desejada\n\n    try {\n      const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${location}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /*if (!weatherData) {\n    return <div>Loading...</div>;\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(WeatherForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"bz3WTkv9WK5s51p29VvW+nOlOFM=\");\n_c = Weather;\nexport default Weather;\n\n/*\n      <h2>{weatherData.location.name}</h2>\n      <img src={ weatherData.current.condition.icon } alt='weatherIcon' />\n      <p>Temperature: {weatherData.current.temp_c}°C</p>\n      <p>Humidity: {weatherData.current.humidity}%</p>*/\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","axios","WeatherForm","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","fetchData","apiKey","process","env","REACT_APP_WEATHER_API_KEY","location","response","get","data","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/humberto/all-in-pocket/src/components/WeatherComponents/Weather/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport WeatherForm from '../WeatherForm/WeatherForm';\n\nconst Weather = () => {\n  const [weatherData, setWeatherData] = useState(null);\n\n  const fetchData = async () => {\n    const apiKey = process.env.REACT_APP_WEATHER_API_KEY; // Substitua pela sua própria chave de API\n    const location = 'London'; // Substitua pela localização desejada\n\n    try {\n      const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${location}`);\n      setWeatherData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  /*if (!weatherData) {\n    return <div>Loading...</div>;\n  }*/\n\n  return (\n    <div>\n      <WeatherForm />\n    </div>\n  );\n};\n\nexport default Weather;\n\n/*\n      <h2>{weatherData.location.name}</h2>\n      <img src={ weatherData.current.condition.icon } alt='weatherIcon' />\n      <p>Temperature: {weatherData.current.temp_c}°C</p>\n      <p>Humidity: {weatherData.current.humidity}%</p>*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,CAAC,CAAC;IACtD,MAAMC,QAAQ,GAAG,QAAQ,CAAC,CAAC;;IAE3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,kDAAiDN,MAAO,MAAKI,QAAS,EAAC,CAAC;MAC1GN,cAAc,CAACO,QAAQ,CAACE,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;AACF;AACA;;EAEE,oBACEd,OAAA;IAAAiB,QAAA,eACEjB,OAAA,CAACF,WAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACnB,EAAA,CAxBID,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AA0Bb,eAAeA,OAAO;;AAEtB;AACA;AACA;AACA;AACA;AAJA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}